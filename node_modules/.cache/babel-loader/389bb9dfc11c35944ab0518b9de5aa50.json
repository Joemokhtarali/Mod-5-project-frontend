{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/components/activityPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchDeleteActivityCreator } from '../actionCreators/actionCreater';\nimport EditActivityT from '../forms/editActivity2';\nimport Map from './map';\nimport Chatroom from './chatroom';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport './activityPage.css';\n\nclass ActivityPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activity: null,\n      location: {},\n      host: null,\n      participants: [],\n      // represnts the user from user_id of that join\n      editActivityState: false,\n      users: [],\n      chatroom: null,\n      startChat: false\n    };\n\n    this.switchEditActivityState = () => {\n      this.setState({\n        editActivityState: !this.state.editActivityState\n      });\n    };\n\n    this.joinActivity = () => {\n      fetch('http://localhost:3000/participants', {\n        method: 'Post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.id,\n          activity_id: this.state.activity.id\n        })\n      }).then(resp => resp.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors);\n        } else {\n          this.setState({\n            users: [...this.state.users, this.props.currentUser]\n          });\n        }\n      });\n    };\n\n    this.deleteActivity = () => {\n      let id = this.state.activity.id;\n      this.props.fetchDeleteActivityCreator(id);\n      this.props.history.push('/home');\n    };\n\n    this.startChatFunc = () => {\n      this.setState({\n        startChat: !this.state.startChat\n      });\n      fetch('http://localhost:3000/chatrooms', {\n        method: 'Post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          activity_id: this.state.activity.id\n        })\n      }).then(resp => resp.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors);\n        } else {\n          this.setState({\n            chatroom: response\n          });\n          console.log('response', response);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/activities/${this.props.match.params.id}`).then(resp => resp.json()).then(data => this.setState({\n      activity: data,\n      host: data.user,\n      participants: data.participants,\n      users: data.users,\n      chatroom: data.chatroom\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, this.state.activity ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, this.props.currentUser.id === this.state.host.id || this.state.users.some(user => user.id === this.props.currentUser.id) ? null : /*#__PURE__*/React.createElement(Button, {\n      onClick: this.joinActivity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 160\n      }\n    }, \"Join Activity\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"image\",\n      src: this.state.activity.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, this.state.activity.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, \"Address: \", this.state.activity.address), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, \"Happening on:\", this.state.activity.date), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"Created By: \", this.state.host.username)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      activity: this.state.activity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, this.state.chatroom ? /*#__PURE__*/React.createElement(Chatroom, {\n      chatroom: this.state.chatroom,\n      currentUser: this.props.currentUser,\n      participants: this.state.participants,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 52\n      }\n    }) : /*#__PURE__*/React.createElement(Button, {\n      onClick: this.startChatFunc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 174\n      }\n    }, \"Start Chat\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }\n    }));\n  }\n\n}\n\nconst msp = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(msp, {\n  fetchDeleteActivityCreator\n})(ActivityPage);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/components/activityPage.js"],"names":["React","connect","fetchDeleteActivityCreator","EditActivityT","Map","Chatroom","Link","Button","ActivityPage","Component","state","activity","location","host","participants","editActivityState","users","chatroom","startChat","switchEditActivityState","setState","joinActivity","fetch","method","headers","body","JSON","stringify","user_id","props","currentUser","id","activity_id","then","resp","json","response","errors","alert","deleteActivity","history","push","startChatFunc","console","log","componentDidMount","match","params","data","user","render","some","image","name","address","date","username","msp"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchDeleteActivityCreator } from '../actionCreators/actionCreater'\nimport EditActivityT from '../forms/editActivity2'\nimport Map from './map'\nimport Chatroom from './chatroom'\nimport { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport './activityPage.css'\n\n\nclass ActivityPage extends React.Component {\n\n    state = {\n        activity: null,\n        location: {},\n        host: null,\n        participants: [], // represnts the user from user_id of that join\n        editActivityState: false,\n        users: [],\n        chatroom: null,\n        startChat: false\n    }\n\n\n    componentDidMount() {\n        fetch(`http://localhost:3000/activities/${this.props.match.params.id}`)\n            .then(resp => resp.json())\n            .then(data => this.setState({ activity: data, host: data.user, participants: data.participants, users: data.users, chatroom: data.chatroom }))\n    }\n\n\n    switchEditActivityState = () => {\n        this.setState({\n            editActivityState: !this.state.editActivityState\n        })\n    }\n\n    joinActivity = () => {\n        fetch('http://localhost:3000/participants', {\n            method: 'Post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ user_id: this.props.currentUser.id, activity_id: this.state.activity.id })\n        }).then(resp => resp.json())\n            .then(response => {\n                if (response.errors) { alert(response.errors) } else {\n                    this.setState({ users: [...this.state.users, this.props.currentUser] })\n                }\n            })\n    }\n\n    deleteActivity = () => {\n        let id = this.state.activity.id\n        this.props.fetchDeleteActivityCreator(id)\n        this.props.history.push('/home')\n    }\n\n\n\n    startChatFunc = () => {\n        this.setState({ startChat: !this.state.startChat })\n        fetch('http://localhost:3000/chatrooms', {\n            method: 'Post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ activity_id: this.state.activity.id })\n        }).then(resp => resp.json())\n            .then(response => {\n                if (response.errors) { alert(response.errors) } else {\n                    this.setState({ chatroom: response })\n                    console.log('response', response)\n\n                }\n            })\n    }\n\n\n    render() {\n        return (\n            <div className='main'>\n\n                {this.state.activity ?\n                    <div>\n                        <div className='buttons'>\n                            {this.props.currentUser.id === this.state.host.id || this.state.users.some(user => user.id === this.props.currentUser.id) ? null : <Button onClick={this.joinActivity}>Join Activity</Button>}\n                        </div>\n                        <div className='profile'>\n                            <img className='image' src={this.state.activity.image}></img>\n                            <div className='name'>{this.state.activity.name}</div>\n                            <div className='address'>Address: {this.state.activity.address}</div>\n                            <div className='date'>Happening on:{this.state.activity.date}</div>\n                            <h4>Created By: {this.state.host.username}</h4>\n                        </div>\n                        <div className='profile'>\n                            <Map activity={this.state.activity} />\n                        </div>\n                        <div className='profile'>\n                            {this.state.chatroom ? <Chatroom chatroom={this.state.chatroom} currentUser={this.props.currentUser} participants={this.state.participants} /> : <Button onClick={this.startChatFunc}>Start Chat</Button>}\n                        </div>\n                    </div>\n\n                    : <div></div>\n                }\n            </div>\n        )\n    }\n}\nconst msp = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nexport default connect(msp, { fetchDeleteActivityCreator })(ActivityPage)\n\n\n"]},"metadata":{},"sourceType":"module"}