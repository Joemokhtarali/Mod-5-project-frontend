{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/components/activityPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchDeleteActivityCreator } from '../actionCreators/actionCreater';\nimport EditActivity from '../forms/editActivity';\nimport { Link } from 'react-router-dom';\nimport Map from './map';\nimport ChatRoomT from './chatRoomTest';\n\nclass ActivityPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activity: null,\n      location: {},\n      host: null,\n      participants: [],\n      // represnts the user from user_id of that join\n      editActivityState: false,\n      users: [],\n      chatroom: null,\n      startChat: false\n    };\n\n    this.switchEditActivityState = () => {\n      this.setState({\n        editActivityState: !this.state.editActivityState\n      });\n    };\n\n    this.joinActivity = () => {\n      // debugger\n      fetch('http://localhost:3000/participants', {\n        method: 'Post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: this.props.currentUser.id,\n          activity_id: this.state.activity.id\n        })\n      }).then(resp => resp.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors);\n        } else {\n          this.setState({\n            users: [...this.state.users, this.props.currentUser]\n          });\n        }\n      });\n    };\n\n    this.deleteActivity = () => {\n      let id = this.state.activity.id;\n      this.props.fetchDeleteActivityCreator(id);\n      this.props.history.push('/home');\n    };\n\n    this.renderParticipants = () => {\n      return this.state.participants.map(p => /*#__PURE__*/React.createElement(Link, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"image\", {\n        src: p.image,\n        height: \"100px\",\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 55\n        }\n      })));\n    };\n\n    this.startChatFunc = () => {\n      this.setState({\n        startChat: !this.state.startChat\n      });\n      fetch('http://localhost:3000/chatrooms', {\n        method: 'Post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          activity_id: this.state.activity.id\n        })\n      }).then(resp => resp.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors);\n        } else {\n          this.setState({\n            chatroom: response\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`http://localhost:3000/activities/${this.props.match.params.id}`).then(resp => resp.json()).then(data => this.setState({\n      activity: data,\n      host: data.user,\n      participants: data.participants,\n      users: data.users,\n      chatroom: data.chatroom\n    }));\n  }\n\n  render() {\n    // console.log('activityPage', this.props.match.params.id);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, this.state.activity && this.state.host ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, this.state.activity.name), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, \"Happening on:\", this.state.activity.date), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Created By: \", this.state.host.name), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.activity.image,\n      height: \"400px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }), this.props.currentUser.id === this.state.host.id ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.switchEditActivityState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 34\n      }\n    }, \"Edit Activity\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.deleteActivity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 104\n      }\n    }, \"Delete Activity\")) : null, this.state.editActivityState ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(EditActivity, {\n      activity: this.state.activity,\n      currentUser: this.props.currentUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 62\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.switchEditActivityState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 147\n      }\n    }, \"Close Form\"), \" \") : null, this.props.currentUser.id === this.state.host.id || this.state.users.some(user => user.id === this.props.currentUser.id) ? null : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.joinActivity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 156\n      }\n    }, \"Join Activity\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }), this.state.chatroom ? /*#__PURE__*/React.createElement(ChatRoomT, {\n      chatroom: this.state.chatroom,\n      currentUser: this.props.currentUser,\n      participants: this.state.participants,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 48\n      }\n    }) : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startChatFunc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 170\n      }\n    }, \"Start Chat\"), /*#__PURE__*/React.createElement(\"div\", {\n      height: \"400\",\n      width: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      activity: this.state.activity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }))) : /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, \"'Loading!!!'\"));\n  }\n\n}\n\nconst msp = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(msp, {\n  fetchDeleteActivityCreator\n})(ActivityPage);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/components/activityPage.js"],"names":["React","connect","fetchDeleteActivityCreator","EditActivity","Link","Map","ChatRoomT","ActivityPage","Component","state","activity","location","host","participants","editActivityState","users","chatroom","startChat","switchEditActivityState","setState","joinActivity","fetch","method","headers","body","JSON","stringify","user_id","props","currentUser","id","activity_id","then","resp","json","response","errors","alert","deleteActivity","history","push","renderParticipants","map","p","image","startChatFunc","componentDidMount","match","params","data","user","render","name","date","some","msp"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchDeleteActivityCreator } from '../actionCreators/actionCreater'\nimport EditActivity from '../forms/editActivity'\nimport { Link } from 'react-router-dom'\nimport Map from './map'\nimport ChatRoomT from './chatRoomTest'\n\n\n\n\n\nclass ActivityPage extends React.Component {\n\n    state = {\n        activity: null,\n        location: {},\n        host: null,\n        participants: [], // represnts the user from user_id of that join\n        editActivityState: false,\n        users: [],\n        chatroom: null,\n        startChat: false\n    }\n\n\n    componentDidMount() {\n        fetch(`http://localhost:3000/activities/${this.props.match.params.id}`)\n            .then(resp => resp.json())\n            .then(data => this.setState({ activity: data, host: data.user, participants: data.participants, users: data.users, chatroom: data.chatroom }))\n    }\n\n\n    switchEditActivityState = () => {\n        this.setState({\n            editActivityState: !this.state.editActivityState\n        })\n    }\n\n    joinActivity = () => {\n        // debugger\n        fetch('http://localhost:3000/participants', {\n            method: 'Post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ user_id: this.props.currentUser.id, activity_id: this.state.activity.id })\n        }).then(resp => resp.json())\n            .then(response => {\n                if (response.errors) { alert(response.errors) } else {\n                    this.setState({ users: [...this.state.users, this.props.currentUser] })\n                }\n            })\n    }\n\n    deleteActivity = () => {\n        let id = this.state.activity.id\n        this.props.fetchDeleteActivityCreator(id)\n        this.props.history.push('/home')\n    }\n\n    renderParticipants = () => {\n        return this.state.participants.map(p => <Link><image src={p.image} height='100px' alt='' /></Link>)\n    }\n\n    startChatFunc = () => {\n        this.setState({ startChat: !this.state.startChat })\n        fetch('http://localhost:3000/chatrooms', {\n            method: 'Post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ activity_id: this.state.activity.id })\n        }).then(resp => resp.json())\n            .then(response => {\n                if (response.errors) { alert(response.errors) } else {\n                    this.setState({ chatroom: response })\n                }\n            })\n    }\n\n\n    render() {\n        // console.log('activityPage', this.props.match.params.id);\n        return (\n\n            <div>\n                {this.state.activity && this.state.host ?\n                    <div>\n                        <h3>{this.state.activity.name}</h3>\n                        <h5>Happening on:{this.state.activity.date}</h5>\n                        <h4>Created By: {this.state.host.name}</h4>\n                        <img src={this.state.activity.image} height='400px'></img>\n                        {/* <h6>{this.state.activity.address}</h6> */}\n                        {/* <p><strong>About: </strong><br />{this.state.activity.about}</p> */}\n\n                        {this.props.currentUser.id === this.state.host.id ?\n                            <div><button onClick={this.switchEditActivityState}>Edit Activity</button> <button onClick={this.deleteActivity}>Delete Activity</button></div> : null\n                        }\n                        {this.state.editActivityState ? <div><EditActivity activity={this.state.activity} currentUser={this.props.currentUser} /> <button onClick={this.switchEditActivityState}>Close Form</button> </div> : null}\n                        {this.props.currentUser.id === this.state.host.id || this.state.users.some(user => user.id === this.props.currentUser.id) ? null : <button onClick={this.joinActivity}>Join Activity</button>}\n                        <br />\n                        {this.state.chatroom ? <ChatRoomT chatroom={this.state.chatroom} currentUser={this.props.currentUser} participants={this.state.participants}/> : <button onClick={this.startChatFunc}>Start Chat</button>}\n\n                        <div height='400' width='400'>\n                            <Map activity={this.state.activity} />\n                        </div>\n                    </div>\n                    : <h2>'Loading!!!'</h2>\n                }\n            </div>\n        )\n    }\n}\nconst msp = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nexport default connect(msp, { fetchDeleteActivityCreator })(ActivityPage)\n\n\n"]},"metadata":{},"sourceType":"module"}