{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/containers/ActivitiesPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Activity from '../components/activity';\nimport { render } from '@testing-library/react';\nimport { Link } from 'react-router-dom';\nimport Search from '../components/search';\nimport AllActivities from './allActivities';\nimport Filter from '../components/filter';\n\nclass ActivitiesPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      searchButton: false,\n      SearchedActivities: [],\n      length: this.props.activities.length\n    };\n\n    this.changeButtonState = () => {\n      this.setState({\n        searchButton: !this.state.searchButton\n      });\n    };\n\n    this.changeSearchInput = event => {\n      this.setState({\n        searchTerm: event.target.value\n      });\n    };\n\n    this.renderActivtites = () => {\n      let activitiesCopy;\n      this.state.searchButton ? activitiesCopy = this.props.activities.filter(a => a.name.toLowerCase().includes(this.state.searchTerm)) : activitiesCopy = [...this.props.activities];\n      return activitiesCopy.map((activity, index) => /*#__PURE__*/React.createElement(Activity, {\n        index: index,\n        key: activity.id,\n        activity: activity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 56\n        }\n      }));\n    };\n  }\n\n  // filter = () => {\n  // }\n  // sort = () => {\n  // }\n  // searchTransaction = (event) => {\n  //     this.setState({\n  //       searchBar: event.target.value,\n  //       searchedtransaction: this.state.transactions.filter(t=> t.description.includes(this.state.searchBar))\n  //     })    \n  //   }\n  //   renderSearch = () => {\n  //     this.setState({\n  //         searchedActivities: this.state.searchedtransaction\n  //     })\n  //   }\n  // searchActivities = event => {\n  //     this.setState({\n  //         searchTerm: event.target.value,\n  //         searchedActivities: this.state.activities.filter(a => a.name.includes(this.state.searchTerm))\n  //         })\n  // }\n  render() {\n    console.log(this.state.searchButton);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      changeSearchInput: this.changeSearchInput,\n      changeButtonState: this.changeButtonState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Filter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AllActivities, {\n      renderActivtites: this.renderActivtites,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst msp = state => {\n  return {\n    activities: state.activities\n  };\n};\n\nexport default connect(msp)(ActivitiesPage);\n{\n  /* <div className='activities'>\n     <h1>ActivitiesPage</h1>\n     {this.state.activities ? this.renderActivtites() : null}\n  </div> */\n}","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/containers/ActivitiesPage.js"],"names":["React","connect","Activity","render","Link","Search","AllActivities","Filter","ActivitiesPage","Component","state","searchTerm","searchButton","SearchedActivities","length","props","activities","changeButtonState","setState","changeSearchInput","event","target","value","renderActivtites","activitiesCopy","filter","a","name","toLowerCase","includes","map","activity","index","id","console","log","msp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAGA,MAAMC,cAAN,SAA6BR,KAAK,CAACS,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCC,KAFyC,GAEjC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,YAAY,EAAE,KAFV;AAGJC,MAAAA,kBAAkB,EAAE,EAHhB;AAIJC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,UAAX,CAAsBF;AAJ1B,KAFiC;;AAAA,SAUzCG,iBAVyC,GAUrB,MAAM;AACtB,WAAKC,QAAL,CAAc;AACVN,QAAAA,YAAY,EAAE,CAAC,KAAKF,KAAL,CAAWE;AADhB,OAAd;AAGH,KAdwC;;AAAA,SAgBzCO,iBAhByC,GAgBrBC,KAAK,IAAI;AACzB,WAAKF,QAAL,CAAc;AACVP,QAAAA,UAAU,EAAES,KAAK,CAACC,MAAN,CAAaC;AADf,OAAd;AAGH,KApBwC;;AAAA,SAsBzCC,gBAtByC,GAsBtB,MAAM;AACrB,UAAIC,cAAJ;AACA,WAAKd,KAAL,CAAWE,YAAX,GACIY,cAAc,GAAG,KAAKT,KAAL,CAAWC,UAAX,CAAsBS,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8B,KAAKnB,KAAL,CAAWC,UAAzC,CAAlC,CADrB,GAC+Ga,cAAc,GAAG,CAAC,GAAG,KAAKT,KAAL,CAAWC,UAAf,CADhI;AAEA,aAAOQ,cAAc,CAACM,GAAf,CAAmB,CAACC,QAAD,EAAWC,KAAX,kBAAqB,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,KAAjB;AAAwB,QAAA,GAAG,EAAED,QAAQ,CAACE,EAAtC;AAA0C,QAAA,QAAQ,EAAEF,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxC,CAAP;AACH,KA3BwC;AAAA;;AA6BzC;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA5B,EAAAA,MAAM,GAAG;AACL+B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAL,CAAWE,YAAvB;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,iBAAiB,EAAE,KAAKO,iBAAhC;AAAmD,MAAA,iBAAiB,EAAE,KAAKF,iBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,aAAD;AAAe,MAAA,gBAAgB,EAAE,KAAKM,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQH;;AArEwC;;AAwE7C,MAAMa,GAAG,GAAG1B,KAAK,IAAI;AACjB,SAAO;AACHM,IAAAA,UAAU,EAAEN,KAAK,CAACM;AADf,GAAP;AAGH,CAJD;;AAMA,eAAef,OAAO,CAACmC,GAAD,CAAP,CAAa5B,cAAb,CAAf;AAGA;AAAC;;;;AAGS","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Activity from '../components/activity'\nimport { render } from '@testing-library/react'\nimport { Link } from 'react-router-dom'\nimport Search from '../components/search'\nimport AllActivities from './allActivities'\nimport Filter from '../components/filter'\n\n\nclass ActivitiesPage extends React.Component {\n\n    state = {\n        searchTerm: '',\n        searchButton: false,\n        SearchedActivities: [],\n        length: this.props.activities.length\n    }\n\n\n    changeButtonState = () => {\n        this.setState({\n            searchButton: !this.state.searchButton,\n        })\n    }\n\n    changeSearchInput = event => {\n        this.setState({\n            searchTerm: event.target.value,\n        })\n    }\n\n    renderActivtites = () => {\n        let activitiesCopy;\n        this.state.searchButton ?\n            activitiesCopy = this.props.activities.filter(a => a.name.toLowerCase().includes(this.state.searchTerm)) : activitiesCopy = [...this.props.activities]\n        return activitiesCopy.map((activity, index) => <Activity index={index} key={activity.id} activity={activity} />)\n    }\n\n    // filter = () => {\n\n    // }\n\n    // sort = () => {\n\n    // }\n    // searchTransaction = (event) => {\n    //     this.setState({\n    //       searchBar: event.target.value,\n    //       searchedtransaction: this.state.transactions.filter(t=> t.description.includes(this.state.searchBar))\n\n    //     })    \n    //   }\n\n    //   renderSearch = () => {\n    //     this.setState({\n    //         searchedActivities: this.state.searchedtransaction\n    //     })\n    //   }\n\n\n    // searchActivities = event => {\n    //     this.setState({\n    //         searchTerm: event.target.value,\n    //         searchedActivities: this.state.activities.filter(a => a.name.includes(this.state.searchTerm))\n    //         })\n    // }\n\n    render() {\n        console.log(this.state.searchButton);\n\n        return (\n            <div>\n                <Search changeSearchInput={this.changeSearchInput} changeButtonState={this.changeButtonState} />\n                <Filter />\n                <AllActivities renderActivtites={this.renderActivtites} />\n            </div>\n\n        )\n    }\n}\n\nconst msp = state => {\n    return {\n        activities: state.activities\n    }\n}\n\nexport default connect(msp)(ActivitiesPage)\n\n\n{/* <div className='activities'>\n    <h1>ActivitiesPage</h1>\n    {this.state.activities ? this.renderActivtites() : null}\n</div> */}"]},"metadata":{},"sourceType":"module"}