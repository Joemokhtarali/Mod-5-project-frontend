{"ast":null,"code":"import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';\n\nvar _templateObject = _taggedTemplateLiteral(['\\n  position: absolute;\\n  top: 1rem;\\n  right: 1rem;\\n\\n  @media (max-width: 600px) {\\n    top: 0.5rem;\\n    right: 0.5rem;\\n  }\\n'], ['\\n  position: absolute;\\n  top: 1rem;\\n  right: 1rem;\\n\\n  @media (max-width: 600px) {\\n    top: 0.5rem;\\n    right: 0.5rem;\\n  }\\n']);\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport IconButton from './IconButton';\nimport { IconLeft, IconRight } from './Icons';\nimport { presentationContext } from './PropTypes';\nvar ButtonGroup = styled.div(_templateObject);\n\nvar TouchNav = function (_Component) {\n  _inherits(TouchNav, _Component);\n\n  function TouchNav() {\n    _classCallCheck(this, TouchNav);\n\n    return _possibleConstructorReturn(this, (TouchNav.__proto__ || _Object$getPrototypeOf(TouchNav)).apply(this, arguments));\n  }\n\n  _createClass(TouchNav, [{\n    key: 'render',\n    value: function render() {\n      var presentation = this.context.presentation;\n      return React.createElement(ButtonGroup, null, React.createElement(IconButton, {\n        disabled: presentation.isAtBeginning(),\n        onClick: presentation.goBack\n      }, React.createElement(IconLeft, null)), React.createElement(IconButton, {\n        disabled: presentation.isAtEnd(),\n        onClick: presentation.goForward\n      }, React.createElement(IconRight, null)));\n    }\n  }]);\n\n  return TouchNav;\n}(Component);\n\nTouchNav.contextTypes = {\n  presentation: presentationContext.isRequired\n};\nexport default TouchNav;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/node_modules/react-presents/dist/es/TouchNav.js"],"names":["_Object$getPrototypeOf","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","_taggedTemplateLiteral","_templateObject","React","Component","styled","IconButton","IconLeft","IconRight","presentationContext","ButtonGroup","div","TouchNav","_Component","__proto__","apply","arguments","key","value","render","presentation","context","createElement","disabled","isAtBeginning","onClick","goBack","isAtEnd","goForward","contextTypes","isRequired"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,+CAAnC;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,sBAAP,MAAmC,6CAAnC;;AAEA,IAAIC,eAAe,GAAGD,sBAAsB,CAAC,CAAC,qIAAD,CAAD,EAA0I,CAAC,qIAAD,CAA1I,CAA5C;;AAEA,OAAOE,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,SAApC;AACA,SAASC,mBAAT,QAAoC,aAApC;AAEA,IAAIC,WAAW,GAAGL,MAAM,CAACM,GAAP,CAAWT,eAAX,CAAlB;;AAEA,IAAIU,QAAQ,GAAG,UAAUC,UAAV,EAAsB;AACnCb,EAAAA,SAAS,CAACY,QAAD,EAAWC,UAAX,CAAT;;AAEA,WAASD,QAAT,GAAoB;AAClBf,IAAAA,eAAe,CAAC,IAAD,EAAOe,QAAP,CAAf;;AAEA,WAAOb,0BAA0B,CAAC,IAAD,EAAO,CAACa,QAAQ,CAACE,SAAT,IAAsBlB,sBAAsB,CAACgB,QAAD,CAA7C,EAAyDG,KAAzD,CAA+D,IAA/D,EAAqEC,SAArE,CAAP,CAAjC;AACD;;AAEDlB,EAAAA,YAAY,CAACc,QAAD,EAAW,CAAC;AACtBK,IAAAA,GAAG,EAAE,QADiB;AAEtBC,IAAAA,KAAK,EAAE,SAASC,MAAT,GAAkB;AACvB,UAAIC,YAAY,GAAG,KAAKC,OAAL,CAAaD,YAAhC;AAGA,aAAOjB,KAAK,CAACmB,aAAN,CACLZ,WADK,EAEL,IAFK,EAGLP,KAAK,CAACmB,aAAN,CACEhB,UADF,EAEE;AACEiB,QAAAA,QAAQ,EAAEH,YAAY,CAACI,aAAb,EADZ;AAEEC,QAAAA,OAAO,EAAEL,YAAY,CAACM;AAFxB,OAFF,EAMEvB,KAAK,CAACmB,aAAN,CAAoBf,QAApB,EAA8B,IAA9B,CANF,CAHK,EAWLJ,KAAK,CAACmB,aAAN,CACEhB,UADF,EAEE;AACEiB,QAAAA,QAAQ,EAAEH,YAAY,CAACO,OAAb,EADZ;AAEEF,QAAAA,OAAO,EAAEL,YAAY,CAACQ;AAFxB,OAFF,EAMEzB,KAAK,CAACmB,aAAN,CAAoBd,SAApB,EAA+B,IAA/B,CANF,CAXK,CAAP;AAoBD;AA1BqB,GAAD,CAAX,CAAZ;;AA6BA,SAAOI,QAAP;AACD,CAvCc,CAuCbR,SAvCa,CAAf;;AAyCAQ,QAAQ,CAACiB,YAAT,GAAwB;AACtBT,EAAAA,YAAY,EAAEX,mBAAmB,CAACqB;AADZ,CAAxB;AAGA,eAAelB,QAAf","sourcesContent":["import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';\n\nvar _templateObject = _taggedTemplateLiteral(['\\n  position: absolute;\\n  top: 1rem;\\n  right: 1rem;\\n\\n  @media (max-width: 600px) {\\n    top: 0.5rem;\\n    right: 0.5rem;\\n  }\\n'], ['\\n  position: absolute;\\n  top: 1rem;\\n  right: 1rem;\\n\\n  @media (max-width: 600px) {\\n    top: 0.5rem;\\n    right: 0.5rem;\\n  }\\n']);\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport IconButton from './IconButton';\nimport { IconLeft, IconRight } from './Icons';\nimport { presentationContext } from './PropTypes';\n\nvar ButtonGroup = styled.div(_templateObject);\n\nvar TouchNav = function (_Component) {\n  _inherits(TouchNav, _Component);\n\n  function TouchNav() {\n    _classCallCheck(this, TouchNav);\n\n    return _possibleConstructorReturn(this, (TouchNav.__proto__ || _Object$getPrototypeOf(TouchNav)).apply(this, arguments));\n  }\n\n  _createClass(TouchNav, [{\n    key: 'render',\n    value: function render() {\n      var presentation = this.context.presentation;\n\n\n      return React.createElement(\n        ButtonGroup,\n        null,\n        React.createElement(\n          IconButton,\n          {\n            disabled: presentation.isAtBeginning(),\n            onClick: presentation.goBack\n          },\n          React.createElement(IconLeft, null)\n        ),\n        React.createElement(\n          IconButton,\n          {\n            disabled: presentation.isAtEnd(),\n            onClick: presentation.goForward\n          },\n          React.createElement(IconRight, null)\n        )\n      );\n    }\n  }]);\n\n  return TouchNav;\n}(Component);\n\nTouchNav.contextTypes = {\n  presentation: presentationContext.isRequired\n};\nexport default TouchNav;"]},"metadata":{},"sourceType":"module"}