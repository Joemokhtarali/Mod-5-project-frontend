{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { fetchCateogriesCreator, fetchActivitiesCreator, assignCurrentUser, removeCurrentUser } from './actionCreators/actionCreater'; // import { Redirect, useHistory } from \"react-router-dom\"\n\nimport Navbar from '../src/containers/Navbar'; // import AddActivity from './forms/addActivity'\n\nimport Login from './forms/login';\nimport Signup from './forms/signup';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './containers/home';\nimport ActivityPage from './components/activityPage';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setUser = user => {\n      this.setState({\n        currentUser: user\n      }, () => {\n        localStorage.user_id = user.id;\n        this.props.history.push('/');\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem('user_id');\n        this.props.history.push('/');\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCategories();\n    this.props.fetchActivities(); // const user_id = localStorage.user_id\n    // if (user_id) {\n    //   fetch('http://localhost:3000/auto_login', {\n    //     headers: {\n    //       'Authorization': user_id\n    //     }\n    //   }).then(resp => resp.json()).then(response => {\n    //     if (response.errors) {\n    //       alert(response.errors)\n    //     } else {\n    //       this.setState({ currentUser: response })\n    //     }\n    //   })\n    // }\n  }\n\n  render() {\n    console.log('from App', this.props.activities);\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      setUser: this.setUser,\n      logout: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        setUser: this.setUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 40\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signup\",\n      component: Signup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/activities/:id\",\n      render: () => /*#__PURE__*/React.createElement(ActivityPage, {\n        activities: 'hello',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 50\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst msp = state => {\n  return {\n    activities: state.activities\n  };\n};\n\nconst mdp = dispatch => {\n  return {\n    fetchCategories: () => dispatch(fetchCateogriesCreator()),\n    fetchActivities: () => dispatch(fetchActivitiesCreator()),\n    assignCurrentUser: () => dispatch(assignCurrentUser()),\n    removeCurrentUser: () => dispatch(removeCurrentUser())\n  };\n};\n\nexport default connect(msp, mdp)(App);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/App.js"],"names":["React","connect","fetchCateogriesCreator","fetchActivitiesCreator","assignCurrentUser","removeCurrentUser","Navbar","Login","Signup","BrowserRouter","Router","Route","Home","ActivityPage","App","Component","setUser","user","setState","currentUser","localStorage","user_id","id","props","history","push","logout","removeItem","componentDidMount","fetchCategories","fetchActivities","render","console","log","activities","msp","state","mdp","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { fetchCateogriesCreator, fetchActivitiesCreator, assignCurrentUser, removeCurrentUser } from './actionCreators/actionCreater'\n// import { Redirect, useHistory } from \"react-router-dom\"\nimport Navbar from '../src/containers/Navbar'\n// import AddActivity from './forms/addActivity'\nimport Login from './forms/login';\nimport Signup from './forms/signup';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from './containers/home'\nimport ActivityPage from './components/activityPage';\n\n\nclass App extends React.Component {\n\n\n  componentDidMount() {\n    this.props.fetchCategories()\n    this.props.fetchActivities()\n    // const user_id = localStorage.user_id\n\n    // if (user_id) {\n    //   fetch('http://localhost:3000/auto_login', {\n    //     headers: {\n    //       'Authorization': user_id\n    //     }\n    //   }).then(resp => resp.json()).then(response => {\n    //     if (response.errors) {\n    //       alert(response.errors)\n    //     } else {\n    //       this.setState({ currentUser: response })\n    //     }\n    //   })\n    // }\n  }\n\n\nsetUser = (user) => {\n  this.setState({\n    currentUser: user\n  }, () => {\n    localStorage.user_id = user.id\n    this.props.history.push('/')\n  })\n}\n\nlogout = () => {\n  this.setState({\n    currentUser: null\n  }, () => {\n    localStorage.removeItem('user_id')\n    this.props.history.push('/')\n  }\n  )\n}\n\nrender() {\n  console.log('from App', this.props.activities);\n  \n  return (\n    <Router>\n      <Navbar setUser={this.setUser} logout={this.logout} />\n      <Route exact path='/' component={Home} />\n      <Route path='/login' render={()=><Login setUser={this.setUser}/>} />\n      <Route path='/signup' component={Signup} />\n      <Route path='/activities/:id' render={()=> <ActivityPage activities={'hello'}/>} />\n    </Router> \n  );\n}\n\n}\n\nconst msp = state => {\n  return {\n    activities: state.activities\n  }\n}\nconst mdp = dispatch => {\n  return {\n\n    fetchCategories: () => dispatch(fetchCateogriesCreator()),\n    fetchActivities: () => dispatch(fetchActivitiesCreator()),\n    assignCurrentUser: () => dispatch(assignCurrentUser()),\n    removeCurrentUser: () => dispatch(removeCurrentUser())\n  }\n}\n\nexport default connect(msp, mdp)(App)"]},"metadata":{},"sourceType":"module"}