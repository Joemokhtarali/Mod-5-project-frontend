{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = require(\"react\");\n\nconst DEFAULT_OPTIONS = {\n  down: false,\n  up: false,\n  touch: false,\n  timeout: 10\n};\n/**\n * Test if a mouse event can trigger a click.\n * It test if mouse button used is the main one.\n * @returns {boolean} If mouse event can click.\n */\n\nconst isMouseEventClickable = ({\n  button\n}) => button === 0;\n/**\n * Listen to both mousedown and click event and\n * trigger callback once.\n */\n\n\nexports.useMouseAction = options => {\n  if (typeof options === 'function') {\n    return exports.useMouseAction({\n      onAction: options\n    });\n  }\n\n  const {\n    onAction,\n    down,\n    up,\n    touch,\n    timeout,\n    onClick,\n    onMouseDown,\n    onMouseUp,\n    onTouchStart,\n    onTouchEnd\n  } = Object.assign({}, DEFAULT_OPTIONS, options);\n\n  if (typeof onAction !== 'function') {\n    throw new Error('You must provide a callback function.');\n  }\n  /**\n   * Boolean state when mouse is down on the element.\n   */\n\n\n  const [mouseDown, setMouseDown] = react_1.useState(false);\n  /**\n   * Function called when mouse up or touch end is\n   * triggered in the whole document.\n   *\n   * It set mouseDown state to false after a short\n   * time to prevent standards mouse up or click\n   * events to call onAction.\n   *\n   */\n\n  const onMouseDownEnd = () => {\n    setTimeout(() => setMouseDown(false), timeout);\n  };\n  /**\n   * Boolean state when mouse up or touch end was triggered\n   * on the element set to true for a short time.\n   */\n\n\n  const [mouseUpTriggered, setMouseUpTriggered] = react_1.useState(false);\n  /**\n   * Function called when mouse up or touch end has\n   * triggered element click action.\n   *\n   * It switch the mouseUpTriggered boolean to true\n   * and set it to false after a short time.\n   *\n   */\n\n  const onMouseUpTriggered = () => {\n    setMouseUpTriggered(true);\n    setTimeout(() => setMouseUpTriggered(false), timeout);\n  };\n  /**\n   * Listen to mouse up event on the whole document\n   * to set mouseDown to false.\n   */\n\n\n  react_1.useEffect(() => {\n    if (down) {\n      const handleDocumentMouseUp = event => {\n        if (isMouseEventClickable(event)) {\n          onMouseDownEnd();\n        }\n      };\n\n      document.addEventListener('mouseup', handleDocumentMouseUp);\n      return () => {\n        document.removeEventListener('mouseup', handleDocumentMouseUp);\n      };\n    }\n\n    return () => {};\n  }, []);\n  /**\n   * Listen to touch end event on the whole document\n   * to set mouseDown to false.\n   */\n\n  react_1.useEffect(() => {\n    if (down && touch) {\n      const handleDocumentTouchEnd = () => onMouseDownEnd();\n\n      document.addEventListener('touchend', handleDocumentTouchEnd);\n      return () => {\n        document.removeEventListener('touchend', handleDocumentTouchEnd);\n      };\n    }\n\n    return () => {};\n  }, []);\n  /**\n   * Indicates if onAction callback can be called\n   * by an event.\n   * @returns {boolean} canTriggerClick\n   */\n\n  const canTriggerClick = react_1.useCallback(() => {\n    /**\n     * Test if element must handle mouse down event\n     * and the mouse is not down or touch is not\n     * started on the element.\n     */\n    if (down && mouseDown) {\n      return false;\n    }\n    /**\n     * Test if element must handle mouse up event\n     * and the action has not already been called\n     * after a mouse up or touch end event.\n     */\n\n\n    if (up && mouseUpTriggered) {\n      return false;\n    }\n\n    return true;\n  }, [mouseDown, mouseUpTriggered]);\n  /**\n   * @namespace props - Events listeners that must be added to React element.\n   */\n\n  const props = {\n    /**\n     * Standard click event listener.\n     */\n    onClick: event => {\n      if (typeof onClick === 'function') {\n        onClick(event);\n      }\n\n      if (canTriggerClick()) {\n        onAction(event);\n      }\n    }\n  };\n  /**\n   * Mouse down event listener.\n   */\n\n  props.onMouseDown = event => {\n    if (typeof onMouseDown === 'function') {\n      onMouseDown(event);\n    }\n\n    if (down && canTriggerClick() && isMouseEventClickable(event)) {\n      setMouseDown(true);\n      onAction(event);\n    }\n  };\n  /**\n   * Touch start event listener.\n   */\n\n\n  props.onTouchStart = event => {\n    if (typeof onTouchStart === 'function') {\n      onTouchStart(event);\n    }\n\n    if (down && touch && canTriggerClick()) {\n      setMouseDown(true);\n      onAction(event);\n    }\n  };\n  /**\n   * Mouse up event listener.\n   */\n\n\n  props.onMouseUp = event => {\n    if (typeof onMouseUp === 'function') {\n      onMouseUp(event);\n    }\n\n    if (up && canTriggerClick() && isMouseEventClickable(event)) {\n      onMouseUpTriggered();\n      /**\n       * Call click handler with a short timeout to\n       * prevent next coming click event to be catched\n       * by a newly rendered element above the button.\n       */\n\n      setTimeout(() => onAction(event), timeout);\n    }\n  };\n  /**\n   * Touch end event listener.\n   */\n\n\n  props.onTouchEnd = event => {\n    if (typeof onTouchEnd === 'function') {\n      onTouchEnd(event);\n    }\n\n    if (up && touch && canTriggerClick()) {\n      onMouseUpTriggered();\n      /**\n       * Call click handler with a short timeout to\n       * prevent next coming mouseup and click events\n       * to be catched by a newly rendered element\n       * above the button.\n       */\n\n      setTimeout(() => onAction(event), timeout);\n    }\n  };\n\n  return props;\n};\n/**\n * Listen to both mousedown and click event and\n * trigger callback once.\n */\n\n\nexports.useMouseDown = options => {\n  if (typeof options === 'function') {\n    return exports.useMouseDown({\n      onAction: options\n    });\n  }\n\n  return exports.useMouseAction(Object.assign({}, options, {\n    down: true\n  }));\n};\n/**\n * Listen to both mouseup and click event and\n * trigger callback once.\n */\n\n\nexports.useMouseUp = options => {\n  if (typeof options === 'function') {\n    return exports.useMouseUp({\n      onAction: options\n    });\n  }\n\n  return exports.useMouseAction(Object.assign({}, options, {\n    up: true\n  }));\n};\n\nexports.default = exports.useMouseAction;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst DEFAULT_OPTIONS = { down: false, up: false, touch: false, timeout: 10 };\n/**\n * Test if a mouse event can trigger a click.\n * It test if mouse button used is the main one.\n * @returns {boolean} If mouse event can click.\n */\nconst isMouseEventClickable = ({ button }) => button === 0;\n/**\n * Listen to both mousedown and click event and\n * trigger callback once.\n */\nexports.useMouseAction = (options) => {\n    if (typeof options === 'function') {\n        return exports.useMouseAction({ onAction: options });\n    }\n    const { onAction, down, up, touch, timeout, onClick, onMouseDown, onMouseUp, onTouchStart, onTouchEnd } = Object.assign({}, DEFAULT_OPTIONS, options);\n    if (typeof onAction !== 'function') {\n        throw new Error('You must provide a callback function.');\n    }\n    /**\n     * Boolean state when mouse is down on the element.\n     */\n    const [mouseDown, setMouseDown] = react_1.useState(false);\n    /**\n     * Function called when mouse up or touch end is\n     * triggered in the whole document.\n     *\n     * It set mouseDown state to false after a short\n     * time to prevent standards mouse up or click\n     * events to call onAction.\n     *\n     */\n    const onMouseDownEnd = () => {\n        setTimeout(() => setMouseDown(false), timeout);\n    };\n    /**\n     * Boolean state when mouse up or touch end was triggered\n     * on the element set to true for a short time.\n     */\n    const [mouseUpTriggered, setMouseUpTriggered] = react_1.useState(false);\n    /**\n     * Function called when mouse up or touch end has\n     * triggered element click action.\n     *\n     * It switch the mouseUpTriggered boolean to true\n     * and set it to false after a short time.\n     *\n     */\n    const onMouseUpTriggered = () => {\n        setMouseUpTriggered(true);\n        setTimeout(() => setMouseUpTriggered(false), timeout);\n    };\n    /**\n     * Listen to mouse up event on the whole document\n     * to set mouseDown to false.\n     */\n    react_1.useEffect(() => {\n        if (down) {\n            const handleDocumentMouseUp = (event) => {\n                if (isMouseEventClickable(event)) {\n                    onMouseDownEnd();\n                }\n            };\n            document.addEventListener('mouseup', handleDocumentMouseUp);\n            return () => {\n                document.removeEventListener('mouseup', handleDocumentMouseUp);\n            };\n        }\n        return () => { };\n    }, []);\n    /**\n     * Listen to touch end event on the whole document\n     * to set mouseDown to false.\n     */\n    react_1.useEffect(() => {\n        if (down && touch) {\n            const handleDocumentTouchEnd = () => onMouseDownEnd();\n            document.addEventListener('touchend', handleDocumentTouchEnd);\n            return () => {\n                document.removeEventListener('touchend', handleDocumentTouchEnd);\n            };\n        }\n        return () => { };\n    }, []);\n    /**\n     * Indicates if onAction callback can be called\n     * by an event.\n     * @returns {boolean} canTriggerClick\n     */\n    const canTriggerClick = react_1.useCallback(() => {\n        /**\n         * Test if element must handle mouse down event\n         * and the mouse is not down or touch is not\n         * started on the element.\n         */\n        if (down && mouseDown) {\n            return false;\n        }\n        /**\n         * Test if element must handle mouse up event\n         * and the action has not already been called\n         * after a mouse up or touch end event.\n         */\n        if (up && mouseUpTriggered) {\n            return false;\n        }\n        return true;\n    }, [mouseDown, mouseUpTriggered]);\n    /**\n     * @namespace props - Events listeners that must be added to React element.\n     */\n    const props = {\n        /**\n         * Standard click event listener.\n         */\n        onClick: event => {\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n            if (canTriggerClick()) {\n                onAction(event);\n            }\n        }\n    };\n    /**\n     * Mouse down event listener.\n     */\n    props.onMouseDown = event => {\n        if (typeof onMouseDown === 'function') {\n            onMouseDown(event);\n        }\n        if (down && canTriggerClick() && isMouseEventClickable(event)) {\n            setMouseDown(true);\n            onAction(event);\n        }\n    };\n    /**\n     * Touch start event listener.\n     */\n    props.onTouchStart = event => {\n        if (typeof onTouchStart === 'function') {\n            onTouchStart(event);\n        }\n        if (down && touch && canTriggerClick()) {\n            setMouseDown(true);\n            onAction(event);\n        }\n    };\n    /**\n     * Mouse up event listener.\n     */\n    props.onMouseUp = event => {\n        if (typeof onMouseUp === 'function') {\n            onMouseUp(event);\n        }\n        if (up && canTriggerClick() && isMouseEventClickable(event)) {\n            onMouseUpTriggered();\n            /**\n             * Call click handler with a short timeout to\n             * prevent next coming click event to be catched\n             * by a newly rendered element above the button.\n             */\n            setTimeout(() => onAction(event), timeout);\n        }\n    };\n    /**\n     * Touch end event listener.\n     */\n    props.onTouchEnd = event => {\n        if (typeof onTouchEnd === 'function') {\n            onTouchEnd(event);\n        }\n        if (up && touch && canTriggerClick()) {\n            onMouseUpTriggered();\n            /**\n             * Call click handler with a short timeout to\n             * prevent next coming mouseup and click events\n             * to be catched by a newly rendered element\n             * above the button.\n             */\n            setTimeout(() => onAction(event), timeout);\n        }\n    };\n    return props;\n};\n/**\n * Listen to both mousedown and click event and\n * trigger callback once.\n */\nexports.useMouseDown = (options) => {\n    if (typeof options === 'function') {\n        return exports.useMouseDown({ onAction: options });\n    }\n    return exports.useMouseAction(Object.assign({}, options, { down: true }));\n};\n/**\n * Listen to both mouseup and click event and\n * trigger callback once.\n */\nexports.useMouseUp = (options) => {\n    if (typeof options === 'function') {\n        return exports.useMouseUp({ onAction: options });\n    }\n    return exports.useMouseAction(Object.assign({}, options, { up: true }));\n};\nexports.default = exports.useMouseAction;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}