{"ast":null,"code":"import _Object$assign from 'babel-runtime/core-js/object/assign';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport cuid from 'cuid';\nimport qs from 'qs';\nimport { Component } from 'react';\nimport { presentationContext } from './PropTypes';\nvar parentWindowID = cuid();\n\nvar PresenterModePlugin = function (_Component) {\n  _inherits(PresenterModePlugin, _Component);\n\n  function PresenterModePlugin(props, context) {\n    _classCallCheck(this, PresenterModePlugin); // Parent of presenter window; null if not presenter window\n\n\n    var _this = _possibleConstructorReturn(this, (PresenterModePlugin.__proto__ || _Object$getPrototypeOf(PresenterModePlugin)).call(this, props, context));\n\n    _this._parentWindowID = null; // Handle to other window containing presenter notes; null if presenter window\n\n    _this._presenterWindow = null;\n    _this._onKeyDown = _this._onKeyDown.bind(_this);\n    _this._signalParent = _this._signalParent.bind(_this);\n    _this._togglePresenterMode = _this._togglePresenterMode.bind(_this);\n    return _this;\n  }\n\n  _createClass(PresenterModePlugin, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      document.body.addEventListener('keydown', this._onKeyDown);\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var presentation = this.context.presentation; // Detect if we are the presenter window or a original\n\n      this._parentWindowID = qs.parse(window.location.search.slice(1)).parentWindowID;\n      presentation.setPluginProps({\n        isPresenterMode: !!this._parentWindowID\n      });\n\n      var callback = function callback(_ref) {\n        var slideIndex = _ref.slideIndex,\n            stepIndex = _ref.stepIndex;\n        presentation.goToSlide({\n          slideIndex: slideIndex,\n          stepIndex: stepIndex\n        });\n      }; // Expose the router to the alternate window\n\n\n      if (!this._parentWindowID && !window[parentWindowID]) {\n        window[parentWindowID] = callback;\n      } else if (this._parentWindowID && !window[this._parentWindowID]) {\n        window[this._parentWindowID] = callback;\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      document.body.removeEventListener('keydown', this._onKeyDown);\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps, nextState, nextContext) {\n      var presentation = this.context.presentation;\n      var slideIndex = presentation.getSlideIndex();\n      var stepIndex = presentation.getStepIndex();\n\n      if (slideIndex !== this._slideIndex || stepIndex !== this._stepIndex) {\n        this._slideIndex = slideIndex;\n        this._stepIndex = stepIndex;\n\n        if (this._parentWindowID) {\n          this._signalParent({\n            slideIndex: slideIndex,\n            stepIndex: stepIndex\n          });\n        } else if (this._presenterWindow) {\n          this._syncPath({\n            slideIndex: slideIndex,\n            stepIndex: stepIndex\n          });\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }, {\n    key: '_onKeyDown',\n    value: function _onKeyDown(event) {\n      if (event.target.tagName === 'INPUT') {\n        return;\n      }\n\n      switch (event.key) {\n        case 'p':\n        case 'P':\n          if (!this._parentWindowID) {\n            this._togglePresenterMode();\n          }\n\n          break;\n\n        default:\n          // Linting requires this :)\n          break;\n      }\n    }\n  }, {\n    key: '_signalParent',\n    value: function _signalParent(path) {\n      if (window.opener) {\n        if (typeof window.opener[this._parentWindowID] !== 'function') {\n          // When hot reloading updates slides, presenter mode gets disconnected.\n          // In this case we should close the secondary/presenter slide.\n          window.close();\n        } else if (window.opener) {\n          // Otherwise, sync route changes between windows.\n          window.opener[this._parentWindowID](path);\n        }\n      }\n    }\n  }, {\n    key: '_togglePresenterMode',\n    value: function _togglePresenterMode(path) {\n      if (this._presenterWindow) {\n        this._presenterWindow.close();\n\n        this._presenterWindow = null;\n      } else {\n        var url = new window.URL(window.location.href); // Inject the 'parentWindowID' query string\n\n        url.search = '?' + qs.stringify(_Object$assign(qs.parse(window.location.search.slice(1)), {\n          parentWindowID: parentWindowID\n        }));\n        this._presenterWindow = window.open(url.toString(), 'react-presents-notes');\n      }\n    }\n  }, {\n    key: '_syncPath',\n    value: function _syncPath(path) {\n      if (this._presenterWindow && !this._presenterWindow.closed) {\n        this._presenterWindow[parentWindowID](path);\n      }\n    }\n  }]);\n\n  return PresenterModePlugin;\n}(Component);\n\nPresenterModePlugin.contextTypes = {\n  presentation: presentationContext.isRequired\n};\nexport default PresenterModePlugin;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/node_modules/react-presents/dist/es/PresenterModePlugin.js"],"names":["_Object$assign","_Object$getPrototypeOf","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","cuid","qs","Component","presentationContext","parentWindowID","PresenterModePlugin","_Component","props","context","_this","__proto__","call","_parentWindowID","_presenterWindow","_onKeyDown","bind","_signalParent","_togglePresenterMode","key","value","componentDidMount","document","body","addEventListener","componentWillMount","presentation","parse","window","location","search","slice","setPluginProps","isPresenterMode","callback","_ref","slideIndex","stepIndex","goToSlide","componentWillUnmount","removeEventListener","componentWillUpdate","nextProps","nextState","nextContext","getSlideIndex","getStepIndex","_slideIndex","_stepIndex","_syncPath","render","event","target","tagName","path","opener","close","url","URL","href","stringify","open","toString","closed","contextTypes","isRequired"],"mappings":"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","sourcesContent":["import _Object$assign from 'babel-runtime/core-js/object/assign';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport cuid from 'cuid';\nimport qs from 'qs';\nimport { Component } from 'react';\nimport { presentationContext } from './PropTypes';\n\nvar parentWindowID = cuid();\n\nvar PresenterModePlugin = function (_Component) {\n  _inherits(PresenterModePlugin, _Component);\n\n  function PresenterModePlugin(props, context) {\n    _classCallCheck(this, PresenterModePlugin);\n\n    // Parent of presenter window; null if not presenter window\n    var _this = _possibleConstructorReturn(this, (PresenterModePlugin.__proto__ || _Object$getPrototypeOf(PresenterModePlugin)).call(this, props, context));\n\n    _this._parentWindowID = null;\n\n    // Handle to other window containing presenter notes; null if presenter window\n    _this._presenterWindow = null;\n\n    _this._onKeyDown = _this._onKeyDown.bind(_this);\n    _this._signalParent = _this._signalParent.bind(_this);\n    _this._togglePresenterMode = _this._togglePresenterMode.bind(_this);\n    return _this;\n  }\n\n  _createClass(PresenterModePlugin, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      document.body.addEventListener('keydown', this._onKeyDown);\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      var presentation = this.context.presentation;\n\n      // Detect if we are the presenter window or a original\n\n      this._parentWindowID = qs.parse(window.location.search.slice(1)).parentWindowID;\n\n      presentation.setPluginProps({\n        isPresenterMode: !!this._parentWindowID\n      });\n\n      var callback = function callback(_ref) {\n        var slideIndex = _ref.slideIndex,\n            stepIndex = _ref.stepIndex;\n\n        presentation.goToSlide({ slideIndex: slideIndex, stepIndex: stepIndex });\n      };\n\n      // Expose the router to the alternate window\n      if (!this._parentWindowID && !window[parentWindowID]) {\n        window[parentWindowID] = callback;\n      } else if (this._parentWindowID && !window[this._parentWindowID]) {\n        window[this._parentWindowID] = callback;\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      document.body.removeEventListener('keydown', this._onKeyDown);\n    }\n  }, {\n    key: 'componentWillUpdate',\n    value: function componentWillUpdate(nextProps, nextState, nextContext) {\n      var presentation = this.context.presentation;\n\n\n      var slideIndex = presentation.getSlideIndex();\n      var stepIndex = presentation.getStepIndex();\n\n      if (slideIndex !== this._slideIndex || stepIndex !== this._stepIndex) {\n        this._slideIndex = slideIndex;\n        this._stepIndex = stepIndex;\n\n        if (this._parentWindowID) {\n          this._signalParent({ slideIndex: slideIndex, stepIndex: stepIndex });\n        } else if (this._presenterWindow) {\n          this._syncPath({ slideIndex: slideIndex, stepIndex: stepIndex });\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }, {\n    key: '_onKeyDown',\n    value: function _onKeyDown(event) {\n      if (event.target.tagName === 'INPUT') {\n        return;\n      }\n\n      switch (event.key) {\n        case 'p':\n        case 'P':\n          if (!this._parentWindowID) {\n            this._togglePresenterMode();\n          }\n          break;\n        default:\n          // Linting requires this :)\n          break;\n      }\n    }\n  }, {\n    key: '_signalParent',\n    value: function _signalParent(path) {\n      if (window.opener) {\n        if (typeof window.opener[this._parentWindowID] !== 'function') {\n          // When hot reloading updates slides, presenter mode gets disconnected.\n          // In this case we should close the secondary/presenter slide.\n          window.close();\n        } else if (window.opener) {\n          // Otherwise, sync route changes between windows.\n          window.opener[this._parentWindowID](path);\n        }\n      }\n    }\n  }, {\n    key: '_togglePresenterMode',\n    value: function _togglePresenterMode(path) {\n      if (this._presenterWindow) {\n        this._presenterWindow.close();\n        this._presenterWindow = null;\n      } else {\n        var url = new window.URL(window.location.href);\n\n        // Inject the 'parentWindowID' query string\n        url.search = '?' + qs.stringify(_Object$assign(qs.parse(window.location.search.slice(1)), { parentWindowID: parentWindowID }));\n\n        this._presenterWindow = window.open(url.toString(), 'react-presents-notes');\n      }\n    }\n  }, {\n    key: '_syncPath',\n    value: function _syncPath(path) {\n      if (this._presenterWindow && !this._presenterWindow.closed) {\n        this._presenterWindow[parentWindowID](path);\n      }\n    }\n  }]);\n\n  return PresenterModePlugin;\n}(Component);\n\nPresenterModePlugin.contextTypes = {\n  presentation: presentationContext.isRequired\n};\nexport default PresenterModePlugin;"]},"metadata":{},"sourceType":"module"}