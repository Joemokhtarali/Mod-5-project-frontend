{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/components/chatroom.js\";\nimport React from 'react'; // import Message from './message'\n\nimport { Button, Input } from '@material-ui/core';\n\nclass Chatroom extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.postMessage = event => {\n      event.preventDefault();\n      let data = {\n        content: this.state.message,\n        chatroom_id: this.props.chatroom.id,\n        user_id: this.props.currentUser.id\n      };\n      console.log('message', data);\n      fetch('http://localhost:3000/messages', {\n        method: 'Post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        this.setState({\n          messages: [...this.state.messages, response]\n        });\n      });\n    };\n\n    this.renderMessages = () => {\n      return this.state.messages.map(m => /*#__PURE__*/React.createElement(Message, {\n        key: m.id,\n        currentUser: this.props.currentUser,\n        message: m,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 45\n        }\n      }));\n    };\n  }\n\n  render() {\n    // console.log(this.props.currentUser);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"new-message-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \"New Message: \"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      name: \"message\",\n      value: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.postMessage,\n      variant: \"contained\",\n      color: \"gray\",\n      style: {\n        position: \"relative\",\n        top: 0,\n        left: 10,\n        width: 90\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"Send\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chatbox\",\n      size: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, this.renderMessages()));\n  }\n\n}\n\nexport default Chatroom;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/components/chatroom.js"],"names":["React","Button","Input","Chatroom","Component","postMessage","event","preventDefault","data","content","state","message","chatroom_id","props","chatroom","id","user_id","currentUser","console","log","fetch","method","headers","body","JSON","stringify","then","response","setState","messages","renderMessages","map","m","render","handleChange","position","top","left","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;;AAMA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAiEnCC,WAjEmC,GAiEpBC,KAAD,IAAW;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,IAAI,GAAG;AAAEC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAAtB;AAA+BC,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,EAAhE;AAAoEC,QAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,WAAX,CAAuBF;AAApG,OAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,IAAvB;AAEAY,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,QAAAA,MAAM,EAAE,MAD4B;AAEpCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF2B;AAKpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,IAAf;AAL8B,OAAnC,CAAL,CAMGkB,IANH,CAMQC,QAAQ,IAAI;AACZ,aAAKC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKnB,KAAL,CAAWmB,QAAf,EAAyBF,QAAzB;AADA,SAAd;AAGH,OAVL;AAWH,KAjFkC;;AAAA,SAmFnCG,cAnFmC,GAmFlB,MAAM;AACnB,aAAO,KAAKpB,KAAL,CAAWmB,QAAX,CAAoBE,GAApB,CAAwBC,CAAC,iBAAI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,CAAC,CAACjB,EAAhB;AAAoB,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWI,WAA5C;AAAyD,QAAA,OAAO,EAAEe,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7B,CAAP;AACH,KArFkC;AAAA;;AAwFnCC,EAAAA,MAAM,GAAG;AACL;AACA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,EAAE,EAAC,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAE,KAAKC,YAAtB;AAAoC,MAAA,IAAI,EAAC,SAAzC;AAAmD,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWC,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKN,WAAtB;AAAkC,MAAA,OAAO,EAAC,WAA1C;AAAsD,MAAA,KAAK,EAAC,MAA5D;AAAmE,MAAA,KAAK,EAAE;AAAC8B,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,GAAG,EAAE,CAA5B;AAA+BC,QAAAA,IAAI,EAAE,EAArC;AAAyCC,QAAAA,KAAK,EAAE;AAAhD,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,eAMI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,IAAI,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,cAAL,EADL,CANJ,CAFJ;AAaH;;AAvGkC;;AA0GvC,eAAe3B,QAAf","sourcesContent":["import React from 'react'\n// import Message from './message'\nimport { Button, Input } from '@material-ui/core';\n\n\n\n\n\nclass Chatroom extends React.Component {\n\n    // state = {\n    //     message: '',\n    //     messages: [],\n    //     // firstTime: true\n    // }\n    // componentDidMount(){\n    //     fetch(`http://localhost:3000/chatrooms/${this.props.chatroom.id}`).then(resp => resp.json()).then(data => this.setState({ messages: data.messages }))\n\n    //         // Creates the new websocket connection\n    //         let socket = new WebSocket('ws://localhost:3000/cable');\n    \n    //         // When the connection is 1st created, this code runs subscribing the clien to a specific chatroom stream in the ChatRoomChannel\n    //         socket.onopen = function (event) {\n    //             console.log('WebSocket is connected.');\n    \n    //             const msg = {\n    //                 command: 'subscribe',\n    //                 identifier: JSON.stringify({\n    //                     id: 1,\n    //                     channel: 'ChatroomChannel'\n    //                 }),\n    //             };\n    \n    //             socket.send(JSON.stringify(msg));\n    //         };\n    \n    //         // When the connection is closed, this code is run\n    //         socket.onclose = function (event) {\n    //             console.log('WebSocket is closed.');\n    //         };\n    \n    //         // When a message is received through the websocket, this code is run\n    //         socket.onmessage = function (event) {\n    //             const response = event.data;\n    //             const msg = JSON.parse(response);\n    \n    //             // Ignores pings\n    //             if (msg.type === \"ping\") {\n    //                 return;\n    //             }\n    \n    //             console.log(\"FROM RAILS: \", msg);\n    \n    //             // Renders any newly created messages onto the page\n    //             if (msg.message) {\n                   \n    //             }\n    \n    //         };\n    \n    //         // When an error occurs through the websocket connection, this code is run printing the error message\n    //         socket.onerror = function (error) {\n    //             console.log('WebSocket Error: ' + error);\n    //         };\n        // }\n    \n    // }\n    // handleChange = (event) => {\n    //     this.setState({\n    //         [event.target.name]: event.target.value\n    //     })\n    // }\n\n    postMessage = (event) => {\n        event.preventDefault()\n        let data = { content: this.state.message, chatroom_id: this.props.chatroom.id, user_id: this.props.currentUser.id }\n        console.log('message', data);\n\n        fetch('http://localhost:3000/messages', {\n            method: 'Post',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }).then(response => {\n                this.setState({\n                    messages: [...this.state.messages, response]\n                })\n            })\n    }   \n\n    renderMessages = () => {\n        return this.state.messages.map(m => <Message key={m.id} currentUser={this.props.currentUser} message={m} />)\n    }\n\n    \n    render() {\n        // console.log(this.props.currentUser);\n        return (\n            \n            <div>\n                <form id=\"new-message-form\">\n                    <label>New Message: </label>\n                    <Input onChange={this.handleChange} name='message' value={this.state.message} /> \n                    <Button onClick={this.postMessage}variant=\"contained\" color=\"gray\" style={{position: \"relative\", top: 0, left: 10, width: 90}}>Send</Button>\n                </form>\n                <div id='chatbox' size='200px'>\n                    {this.renderMessages()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Chatroom"]},"metadata":{},"sourceType":"module"}