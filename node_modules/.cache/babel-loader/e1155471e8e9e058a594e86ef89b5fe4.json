{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { fetchCateogriesCreator, fetchActivitiesCreator, assignCurrentUser } from './actionCreators/actionCreater';\nimport CateogriesContainer from './containers/categoriesContainer'; // import { Redirect, useHistory } from \"react-router-dom\"\n\nimport Navbar from '../src/containers/Navbar';\nimport AddActivity from './forms/addActivity';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null\n    };\n\n    this.setUser = user => {\n      this.assignCurrentUser(user), () => {\n        localStorage.user_id = user.id;\n        this.props.history.push('/');\n      };\n    };\n\n    this.logout = () => {\n      this.assignCurrentUser(null), () => {\n        localStorage.removeItem('user_id');\n        this.props.history.push('/');\n      };\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCategories();\n    this.props.fetchActivities();\n    const user_id = localStorage.user_id;\n\n    if (user_id) {\n      fetch('http://localhost:3000/auto_login', {\n        headers: {\n          'Authorization': user_id\n        }\n      }).then(resp => resp.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors);\n        } else {\n          this.assignCurrentUser(response);\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      setUser: this.setUser,\n      logout: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slides\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \" Slides \"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Browse By Category: \"), /*#__PURE__*/React.createElement(CateogriesContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Recently Viewd: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recently-viewed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \" Views\"), /*#__PURE__*/React.createElement(AddActivity, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mdp = dispatch => {\n  return {\n    fetchCategories: () => dispatch(fetchCateogriesCreator()),\n    fetchActivities: () => dispatch(fetchActivitiesCreator()),\n    assignCurrentUser: () => dispatch(assignCurrentUser())\n  };\n};\n\nexport default connect(null, mdp)(App);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/App.js"],"names":["React","connect","fetchCateogriesCreator","fetchActivitiesCreator","assignCurrentUser","CateogriesContainer","Navbar","AddActivity","App","Component","state","currentUser","setUser","user","localStorage","user_id","id","props","history","push","logout","removeItem","componentDidMount","fetchCategories","fetchActivities","fetch","headers","then","resp","json","response","errors","alert","render","mdp","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { fetchCateogriesCreator, fetchActivitiesCreator, assignCurrentUser } from './actionCreators/actionCreater'\nimport CateogriesContainer from './containers/categoriesContainer'\n// import { Redirect, useHistory } from \"react-router-dom\"\nimport Navbar from '../src/containers/Navbar'\nimport AddActivity from './forms/addActivity'\n\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: null\n  }\n\n  componentDidMount() {\n    this.props.fetchCategories()\n    this.props.fetchActivities()\n    const user_id = localStorage.user_id\n\n    if (user_id) {\n      fetch('http://localhost:3000/auto_login', {\n        headers: {\n          'Authorization': user_id\n        }\n      }).then(resp => resp.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors)\n        } else {\n          this.assignCurrentUser(response)\n        }\n      })\n    }\n  }\n\n\n  setUser = (user) => {\n    this.assignCurrentUser(user)\n      , () => {\n        localStorage.user_id = user.id\n        this.props.history.push('/')\n      }\n    }\n\n    logout = () => {\n      this.assignCurrentUser(null)\n        , () => {\n          localStorage.removeItem('user_id')\n          this.props.history.push('/')\n        }\n    }\n\n    render() {\n      return (\n        <div className=\"App\">\n          <Navbar setUser={this.setUser} logout={this.logout} />\n          <div className='slides'> Slides </div>\n          <h2>Browse By Category: </h2>\n          <CateogriesContainer />\n          <h2>Recently Viewd: </h2>\n          <div className='recently-viewed'> Views</div>\n          <AddActivity />\n        </div>\n      );\n    }\n\n  }\n\n  const mdp = dispatch => {\n    return {\n\n      fetchCategories: () => dispatch(fetchCateogriesCreator()),\n      fetchActivities: () => dispatch(fetchActivitiesCreator()),\n      assignCurrentUser: () => dispatch(assignCurrentUser())\n    }\n  }\n\n  export default connect(null, mdp)(App)"]},"metadata":{},"sourceType":"module"}