{"ast":null,"code":"// import React, { Component } from 'react';\n// import GoogleMapReact from 'google-map-react';\n// import Marker from './marker.js'\n// const array = [{ lat: -73.923462, lng: 40.764357 }, { lat: 73.906588, lng: 40.778790 }, { lat: -73.941860, lng: 40.744309 }]\n// class Map extends Component {\n//   state = {\n//     lat: null,\n//     lng: null,\n//     zoom: 13,\n//   }\n//   componentDidMount() {\n//     fetch(`https://maps.googleapis.com/maps/api/geocode/json?address='${this.props.activity.address}'&key=AIzaSyD4X3Xez83U_L3WZm6Fny8zsSxN_G4s1a4`)\n//       .then(resp => resp.json())\n//       .then(data => this.setState({\n//         lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng\n//       }))\n//   }\n//   mapMarkers = () => {\n//     // debugger\n//     return array.map(marker =>\n//       <Marker\n//         // key={marker.id}\n//         // onClick={onClick}\n//         position={{ lat: marker.lat, lng: marker.lng }}\n//       />\n//     )\n//   }\n//   render() {\n//     return (\n//       <div style={{ height: '50vh', width: '100%' }}>\n//         {this.state.lat ?\n//           <GoogleMapReact\n//             bootstrapURLKeys={{ key: 'AIzaSyD4X3Xez83U_L3WZm6Fny8zsSxN_G4s1a4' }}\n//             defaultCenter={{ lat: this.state.lat, lng: this.state.lng }}\n//             defaultZoom={this.state.zoom}\n//           >\n//             {this.mapMarkers()}\n//             {/* <Marker\n//               lat={this.state.lat}\n//               lng={this.state.lng}\n//               name={this.props.activity.name}\n//               color='blue'\n//               onClick={this.onMarkerClick}\n//             /> */}\n//             {this.mapMarkers()}\n//           </GoogleMapReact>\n//           : null}\n//       </div>\n//     );\n//   }\n// }\n// export default Map;\n// import React, { Component } from 'react'; \n// import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-map-react'; \n// const mapStyles = { \n//   width: '100%', \n//   height: '300px' \n// }; \n// let geocoder; \n// let addressData = [{location: \"146 Pierrepont St, Brooklyn, NY, USA\"}, {location: \"153 Remsen St, Brooklyn, NY, USA\"}]; \n// class ShelterMap extends Component { \n//   constructor (props) { \n//     super(props); \n//     this.onMarkerClick = this.onMarkerClick.bind(this); \n//     this.displayMarkers = this.displayMarkers.bind(this); \n//     this.state = { \n//         lat: 40.6946768, \n//         lng: -73.99161700000002, \n//         showingInfoWindow: false, \n//         activeMarker: {}, \n//         selectedPlace: {}, \n//         places: [], \n//         stores: [{latitude: 47.49855629475769, longitude: -122.14184416996333}, \n//           {latitude: 47.359423, longitude: -122.021071}, \n//           {latitude: 47.2052192687988, longitude: -121.988426208496}, \n//           {latitude: 47.6307081, longitude: -122.1434325}, \n//           {latitude: 47.3084488, longitude: -122.2140121}, \n//           {latitude: 47.5524695, longitude: -122.0425407}] \n//     } \n//   } \n//   componentDidMount () { \n//     this.plotPoints() \n//   } \n//   plotPoints () { \n//     let locations = this.getPoints(geocoder) \n//     let places = new Array() \n//     Promise.all(locations) \n//       .then(function(returnVals) { \n//         returnVals.forEach(function(latLng) { \n//           let place = {latitude: latLng[0], longitude: latLng[1]} \n//           places.push(place) \n//         }) \n//       }) \n//     this.setState (() => { \n//       return { \n//           places: places \n//       } \n//     }); \n//   } \n//   getPoints(geocoder) { \n//     let locationData = []; \n//     for (let i = 0; i < addressData.length; i++) { \n//       locationData.push(this.findLatLang(addressData[i].location, geocoder)) \n//     } \n//     return locationData // array of promises \n//   } \n//   findLatLang(address, geocoder) { \n//     return new Promise(function(resolve, reject) { \n//       geocoder.geocode({ \n//         'address': address \n//       }, function(results, status) { \n//         if (status === 'OK') { \n//           console.log(results); \n//           resolve([results[0].geometry.location.lat(), results[0].geometry.location.lng()]); \n//         } else { \n//           reject(new Error('Couldnt\\'t find the location ' + address)); \n//         } \n//       }) \n//     }) \n//   } \n//   displayMarkers (stores) { \n//     return stores.map((place, index) => { \n//       return <Marker key={index} id={index} position={{ \n//        lat: place.latitude, \n//        lng: place.longitude \n//      }} \n//      onClick={() => console.log(\"You clicked me!\")} /> \n//     }) \n//   } \n//   onMarkerClick (props, marker, e) { \n//     this.setState({ \n//       selectedPlace: props, \n//       activeMarker: marker, \n//       showingInfoWindow: true \n//     }); \n//   }; \n//   render() { \n//     geocoder = new this.props.google.maps.Geocoder(); \n//     return ( \n//       <div className=\"container place-map\"> \n//         <div className=\"row\"> \n//           <div className=\"col-md-12\"> \n//             <Map \n//               google={this.props.google} \n//               zoom={14} \n//               style={mapStyles} \n//               initialCenter={{ \n//                 lat: this.state.lat, \n//                 lng: this.state.lng \n//               }} \n//               > \n//               {this.displayMarkers(this.state.stores)} \n//               {this.displayMarkers(this.state.places)} \n//               <InfoWindow \n//                 marker={this.state.activeMarker} \n//                 visible={this.state.showingInfoWindow} \n//               > \n//                 <div>Your Location Here!</div> \n//               </InfoWindow> \n//             </Map> \n//           </div> \n//         </div> \n//       </div> \n//     ); \n//   } \n// } \n// export default GoogleApiWrapper({ \n//   apiKey: 'AIzaSyD4X3Xez83U_L3WZm6Fny8zsSxN_G4s1a4' \n// })(ShelterMap);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Flatiron Labs & projects/Mod 5 Project/Mod-5-project-frontend/src/components/map.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAQA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\n// import GoogleMapReact from 'google-map-react';\n// import Marker from './marker.js'\n\n\n// const array = [{ lat: -73.923462, lng: 40.764357 }, { lat: 73.906588, lng: 40.778790 }, { lat: -73.941860, lng: 40.744309 }]\n\n// class Map extends Component {\n\n//   state = {\n//     lat: null,\n//     lng: null,\n//     zoom: 13,\n//   }\n\n//   componentDidMount() {\n//     fetch(`https://maps.googleapis.com/maps/api/geocode/json?address='${this.props.activity.address}'&key=AIzaSyD4X3Xez83U_L3WZm6Fny8zsSxN_G4s1a4`)\n//       .then(resp => resp.json())\n//       .then(data => this.setState({\n//         lat: data.results[0].geometry.location.lat, lng: data.results[0].geometry.location.lng\n//       }))\n//   }\n\n\n\n//   mapMarkers = () => {\n//     // debugger\n//     return array.map(marker =>\n//       <Marker\n//         // key={marker.id}\n//         // onClick={onClick}\n//         position={{ lat: marker.lat, lng: marker.lng }}\n//       />\n//     )\n//   }\n\n//   render() {\n\n//     return (\n//       <div style={{ height: '50vh', width: '100%' }}>\n//         {this.state.lat ?\n//           <GoogleMapReact\n//             bootstrapURLKeys={{ key: 'AIzaSyD4X3Xez83U_L3WZm6Fny8zsSxN_G4s1a4' }}\n//             defaultCenter={{ lat: this.state.lat, lng: this.state.lng }}\n//             defaultZoom={this.state.zoom}\n//           >\n//             {this.mapMarkers()}\n//             {/* <Marker\n//               lat={this.state.lat}\n//               lng={this.state.lng}\n//               name={this.props.activity.name}\n//               color='blue'\n//               onClick={this.onMarkerClick}\n//             /> */}\n//             {this.mapMarkers()}\n//           </GoogleMapReact>\n//           : null}\n\n//       </div>\n//     );\n//   }\n// }\n\n// export default Map;\n\n\n\n\n\n\n\n// import React, { Component } from 'react'; \n// import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-map-react'; \n \n// const mapStyles = { \n//   width: '100%', \n//   height: '300px' \n// }; \n \n// let geocoder; \n// let addressData = [{location: \"146 Pierrepont St, Brooklyn, NY, USA\"}, {location: \"153 Remsen St, Brooklyn, NY, USA\"}]; \n \n// class ShelterMap extends Component { \n//   constructor (props) { \n//     super(props); \n//     this.onMarkerClick = this.onMarkerClick.bind(this); \n//     this.displayMarkers = this.displayMarkers.bind(this); \n//     this.state = { \n//         lat: 40.6946768, \n//         lng: -73.99161700000002, \n//         showingInfoWindow: false, \n//         activeMarker: {}, \n//         selectedPlace: {}, \n//         places: [], \n//         stores: [{latitude: 47.49855629475769, longitude: -122.14184416996333}, \n//           {latitude: 47.359423, longitude: -122.021071}, \n//           {latitude: 47.2052192687988, longitude: -121.988426208496}, \n//           {latitude: 47.6307081, longitude: -122.1434325}, \n//           {latitude: 47.3084488, longitude: -122.2140121}, \n//           {latitude: 47.5524695, longitude: -122.0425407}] \n//     } \n//   } \n \n//   componentDidMount () { \n//     this.plotPoints() \n//   } \n \n//   plotPoints () { \n//     let locations = this.getPoints(geocoder) \n//     let places = new Array() \n \n//     Promise.all(locations) \n//       .then(function(returnVals) { \n//         returnVals.forEach(function(latLng) { \n//           let place = {latitude: latLng[0], longitude: latLng[1]} \n//           places.push(place) \n//         }) \n//       }) \n//     this.setState (() => { \n//       return { \n//           places: places \n//       } \n//     }); \n//   } \n \n//   getPoints(geocoder) { \n//     let locationData = []; \n//     for (let i = 0; i < addressData.length; i++) { \n//       locationData.push(this.findLatLang(addressData[i].location, geocoder)) \n//     } \n//     return locationData // array of promises \n//   } \n \n//   findLatLang(address, geocoder) { \n//     return new Promise(function(resolve, reject) { \n//       geocoder.geocode({ \n//         'address': address \n//       }, function(results, status) { \n//         if (status === 'OK') { \n//           console.log(results); \n//           resolve([results[0].geometry.location.lat(), results[0].geometry.location.lng()]); \n//         } else { \n//           reject(new Error('Couldnt\\'t find the location ' + address)); \n//         } \n//       }) \n//     }) \n//   } \n \n//   displayMarkers (stores) { \n//     return stores.map((place, index) => { \n//       return <Marker key={index} id={index} position={{ \n//        lat: place.latitude, \n//        lng: place.longitude \n//      }} \n//      onClick={() => console.log(\"You clicked me!\")} /> \n//     }) \n//   } \n \n//   onMarkerClick (props, marker, e) { \n//     this.setState({ \n//       selectedPlace: props, \n//       activeMarker: marker, \n//       showingInfoWindow: true \n//     }); \n//   }; \n \n//   render() { \n//     geocoder = new this.props.google.maps.Geocoder(); \n//     return ( \n//       <div className=\"container place-map\"> \n//         <div className=\"row\"> \n//           <div className=\"col-md-12\"> \n//             <Map \n//               google={this.props.google} \n//               zoom={14} \n//               style={mapStyles} \n//               initialCenter={{ \n//                 lat: this.state.lat, \n//                 lng: this.state.lng \n//               }} \n//               > \n//               {this.displayMarkers(this.state.stores)} \n//               {this.displayMarkers(this.state.places)} \n//               <InfoWindow \n//                 marker={this.state.activeMarker} \n//                 visible={this.state.showingInfoWindow} \n//               > \n//                 <div>Your Location Here!</div> \n//               </InfoWindow> \n//             </Map> \n//           </div> \n//         </div> \n//       </div> \n//     ); \n//   } \n// } \n// export default GoogleApiWrapper({ \n//   apiKey: 'AIzaSyD4X3Xez83U_L3WZm6Fny8zsSxN_G4s1a4' \n// })(ShelterMap);"]},"metadata":{},"sourceType":"module"}