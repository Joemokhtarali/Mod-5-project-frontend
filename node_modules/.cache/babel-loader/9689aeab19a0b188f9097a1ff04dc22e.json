{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { fetchCateogriesCreator, fetchActivitiesCreator, assignCurrentUser, removeCurrentUser } from './actionCreators/actionCreater';\nimport Navbar from '../src/containers/Navbar';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './containers/home';\nimport Profile from './components/profile';\nimport ActivitiesPage from './containers/ActivitiesPage';\nimport MainPage from './containers/mainPage';\nimport ActivityPage from './components/activityPage';\nimport AllActivities from './containers/allActivities';\nimport activityPage from './components/activityPage';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCategories();\n    this.props.fetchActivities();\n    const user_id = localStorage.user_id;\n\n    if (user_id) {\n      fetch('http://localhost:3000/auto_login', {\n        headers: {\n          'Authorization': user_id\n        }\n      }).then(resp => resp.json()).then(response => {\n        if (response.errors) {\n          alert(response.errors);\n        } else {\n          console.log('cool');\n        }\n      });\n    }\n  } // const token = localStorage.token\n  //   if (token) {\n  //     fetch(\"http://localhost:3000/auto_login\", {\n  //       headers: {\n  //         \"Authorization\": token\n  //       }\n  //     })\n  //       .then(res => res.json())\n  //       .then(response => {\n  //         if (response.errors) {\n  //           alert(response.errors)\n  //         } else {\n  //           this.props.assignCurrentUser(response)\n  //         }\n  //       })\n  //   }\n\n\n  render() {\n    console.log(this.props.currentUser);\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/Home\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: MainPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/activities/:id\",\n      component: ActivityPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/activities\",\n      component: ActivitiesPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/myprofile\",\n      render: () => /*#__PURE__*/React.createElement(Profile, {\n        currentUser: this.props.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 48\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst msp = state => {\n  return {\n    activities: state.activities,\n    currentUser: state.currentUser\n  };\n};\n\nconst mdp = dispatch => {\n  return {\n    fetchCategories: () => dispatch(fetchCateogriesCreator()),\n    fetchActivities: () => dispatch(fetchActivitiesCreator()) // assignCurrentUser: () => dispatch(assignCurrentUser()),\n    // removeCurrentUser: () => dispatch(removeCurrentUser())\n\n  };\n};\n\nexport default connect(msp, mdp)(App);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/App.js"],"names":["React","connect","fetchCateogriesCreator","fetchActivitiesCreator","assignCurrentUser","removeCurrentUser","Navbar","BrowserRouter","Router","Route","Home","Profile","ActivitiesPage","MainPage","ActivityPage","AllActivities","activityPage","App","Component","state","currentUser","componentDidMount","props","fetchCategories","fetchActivities","user_id","localStorage","fetch","headers","then","resp","json","response","errors","alert","console","log","render","history","msp","activities","mdp","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { fetchCateogriesCreator, fetchActivitiesCreator, assignCurrentUser, removeCurrentUser } from './actionCreators/actionCreater'\nimport Navbar from '../src/containers/Navbar'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from './containers/home'\nimport Profile from './components/profile';\nimport ActivitiesPage from './containers/ActivitiesPage';\nimport MainPage from './containers/mainPage'\nimport ActivityPage from './components/activityPage';\nimport AllActivities from './containers/allActivities';\nimport activityPage from './components/activityPage';\n\n\n\n\nclass App extends React.Component {\n  state = {\n    currentUser: null\n  }\n\n  componentDidMount() {\n    this.props.fetchCategories()\n    this.props.fetchActivities()\n    const user_id = localStorage.user_id\n\n    if (user_id) {\n      fetch('http://localhost:3000/auto_login', {\n        headers: {\n          'Authorization': user_id\n        }\n      })\n        .then(resp => resp.json()).then(response => {\n          if (response.errors) {\n            alert(response.errors)\n          } else {\n            console.log('cool');\n\n          }\n        })\n    }\n  }\n\n    \n\n  // const token = localStorage.token\n\n  //   if (token) {\n\n  //     fetch(\"http://localhost:3000/auto_login\", {\n  //       headers: {\n  //         \"Authorization\": token\n  //       }\n  //     })\n  //       .then(res => res.json())\n  //       .then(response => {\n  //         if (response.errors) {\n  //           alert(response.errors)\n  //         } else {\n  //           this.props.assignCurrentUser(response)\n  //         }\n  //       })\n  //   }\n\n\n\n  render() {\n    console.log(this.props.currentUser);\n\n    return (\n      <Router>\n        <Navbar history={this.props.history}/>\n        <Route exact path='/Home' component={Home} />\n        <Route exact path='/' component={MainPage} />\n        <Route path='/activities/:id' component={ActivityPage} />\n        <Route exact path='/activities' component={ActivitiesPage} />\n        <Route path='/myprofile' render={() => <Profile currentUser={this.props.currentUser} />} />\n      </Router>\n    );\n  }\n\n}\n\nconst msp = state => {\n  return {\n    activities: state.activities,\n    currentUser: state.currentUser\n  }\n}\nconst mdp = dispatch => {\n  return {\n\n    fetchCategories: () => dispatch(fetchCateogriesCreator()),\n    fetchActivities: () => dispatch(fetchActivitiesCreator()),\n    // assignCurrentUser: () => dispatch(assignCurrentUser()),\n    // removeCurrentUser: () => dispatch(removeCurrentUser())\n  }\n}\n\nexport default connect(msp, mdp)(App)"]},"metadata":{},"sourceType":"module"}