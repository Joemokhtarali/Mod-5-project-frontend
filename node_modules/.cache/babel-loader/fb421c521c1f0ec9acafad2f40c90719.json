{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/containers/ActivitiesContainer.js\";\nimport React from 'react';\nimport Activity from '../components/activity';\nimport '../../src/index.css';\n\nclass ActivitiesContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startIndex: 0\n    };\n\n    this.changeIndex = () => {\n      let newIndex = this.state.startIndex + 5;\n\n      if (newIndex >= this.props.activities.length - 1) {\n        newIndex = 0;\n      }\n\n      this.setState({\n        startIndex: this.startIndex + 5\n      });\n    };\n  }\n\n  renderActivities() {\n    return this.props.activities.slice(this.state.startIndex, this.state.startIndex + 5).map((activitiy, index) => /*#__PURE__*/React.createElement(Activity, {\n      activity: activitiy,\n      key: activitiy.id,\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 120\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"activity-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, this.renderActivities(), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.changeIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Next\"));\n  }\n\n}\n\nexport default ActivitiesContainer;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/containers/ActivitiesContainer.js"],"names":["React","Activity","ActivitiesContainer","Component","state","startIndex","changeIndex","newIndex","props","activities","length","setState","renderActivities","slice","map","activitiy","index","id","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,qBAAP;;AAGA,MAAMC,mBAAN,SAAkCF,KAAK,CAACG,SAAxC,CAAkD;AAAA;AAAA;AAAA,SAE9CC,KAF8C,GAEtC;AACJC,MAAAA,UAAU,EAAE;AADR,KAFsC;;AAAA,SAwB9CC,WAxB8C,GAwBhC,MAAM;AAChB,UAAIC,QAAQ,GAAG,KAAKH,KAAL,CAAWC,UAAX,GAAwB,CAAvC;;AACA,UAAIE,QAAQ,IAAI,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,GAA+B,CAA/C,EAAkD;AAC9CH,QAAAA,QAAQ,GAAG,CAAX;AACH;;AACD,WAAKI,QAAL,CAAc;AACVN,QAAAA,UAAU,EAAE,KAAKA,UAAL,GAAkB;AADpB,OAAd;AAGH,KAhC6C;AAAA;;AAkC9CO,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKJ,KAAL,CAAWC,UAAX,CAAsBI,KAAtB,CAA4B,KAAKT,KAAL,CAAWC,UAAvC,EAAmD,KAAKD,KAAL,CAAWC,UAAX,GAAwB,CAA3E,EAA8ES,GAA9E,CAAkF,CAACC,SAAD,EAAYC,KAAZ,kBAAsB,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAED,SAApB;AAA+B,MAAA,GAAG,EAAEA,SAAS,CAACE,EAA9C;AAAkD,MAAA,KAAK,EAAED,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxG,CAAP;AACH;;AAEDE,EAAAA,MAAM,GAAG;AAGL,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,gBAAL,EADL,eAEI;AAAQ,MAAA,OAAO,EAAE,KAAKN,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ;AAMH;;AA/C6C;;AAmDlD,eAAeJ,mBAAf","sourcesContent":["import React from 'react'\nimport Activity from '../components/activity'\nimport '../../src/index.css'\n\n\nclass ActivitiesContainer extends React.Component {\n\n    state = {\n        startIndex: 0\n    }\n\n    // nextPage = () => {\n    //     let newIndex = this.state.startIdx + 4;\n    //     if (newIndex >= this.props.sushis.length){ newIndex = 0 }\n\n    //     this.setState({\n    //       startIdx: newIndex\n    //       //  startIdx: this.state.startIdx + 4 >= this.props.sushis.length ? 0 : this.state.startIdx + 4\n    //     })\n    //   }\n\n    //   renderSushis = () => {\n    //     // let sushiCopy = [...this.props.sushis]\n    //     let { startIdx } = this.state;\n\n    //     let fourSushis = this.props.sushis.slice(startIdx, startIdx + 4) // slice does not mutate so we don't need a copy \n    //     return fourSushis.map(sushi => <Sushi key={sushi.id} sushi={sushi} consume={this.props.consume} ate={this.props.ate}/>)\n    //   }\n\n    changeIndex = () => {\n        let newIndex = this.state.startIndex + 5;\n        if (newIndex >= this.props.activities.length - 1) {\n            newIndex = 0\n        }\n        this.setState({\n            startIndex: this.startIndex + 5\n        })\n    }\n\n    renderActivities() {\n        return this.props.activities.slice(this.state.startIndex, this.state.startIndex + 5).map((activitiy, index) => <Activity activity={activitiy} key={activitiy.id} index={index} />)\n    }\n\n    render() {\n\n\n        return (\n            <div className='activity-container'>\n                {this.renderActivities()}\n                <button onClick={this.changeIndex}>Next</button>\n            </div>\n        )\n    }\n}\n\n\nexport default ActivitiesContainer"]},"metadata":{},"sourceType":"module"}