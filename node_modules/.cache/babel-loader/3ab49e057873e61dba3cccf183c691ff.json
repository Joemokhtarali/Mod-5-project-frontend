{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { fetchCateogriesCreator, fetchActivitiesCreator, assignCurrentUser } from './actionCreators/actionCreater'; // import { Redirect, useHistory } from \"react-router-dom\"\n\nimport Navbar from '../src/containers/Navbar'; // import AddActivity from './forms/addActivity'\n\nimport Login from './forms/login';\nimport Signup from './forms/signup';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './containers/home';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: null\n    };\n\n    this.setUser = user => {\n      this.setState({\n        currentUser: user\n      }, () => {\n        localStorage.user_id = user.id;\n        this.props.history.push('/');\n      });\n    };\n\n    this.logout = () => {\n      this.setState({\n        currentUser: null\n      }, () => {\n        localStorage.removeItem('user_id');\n        this.props.history.push('/');\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCategories();\n    this.props.fetchActivities(); // const user_id = localStorage.user_id\n    // if (user_id) {\n    //   fetch('http://localhost:3000/auto_login', {\n    //     headers: {\n    //       'Authorization': user_id\n    //     }\n    //   }).then(resp => resp.json()).then(response => {\n    //     if (response.errors) {\n    //       alert(response.errors)\n    //     } else {\n    //       this.setState({ currentUser: response })\n    //     }\n    //   })\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      setUser: this.setUser,\n      logout: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        setUser: this.setUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 40\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signup\",\n      component: Signup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst mdp = dispatch => {\n  return {\n    fetchCategories: () => dispatch(fetchCateogriesCreator()),\n    fetchActivities: () => dispatch(fetchActivitiesCreator()),\n    assignCurrentUser: () => dispatch(assignCurrentUser())\n  };\n};\n\nexport default connect(null, mdp)(App);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Mod 5 Project/Mod-5-project-frontend/src/App.js"],"names":["React","connect","fetchCateogriesCreator","fetchActivitiesCreator","assignCurrentUser","Navbar","Login","Signup","BrowserRouter","Router","Route","Home","App","Component","state","currentUser","setUser","user","setState","localStorage","user_id","id","props","history","push","logout","removeItem","componentDidMount","fetchCategories","fetchActivities","render","mdp","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,EAAyDC,iBAAzD,QAAkF,gCAAlF,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAGA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,WAAW,EAAE;AADP,KAFwB;;AAAA,SA2BlCC,OA3BkC,GA2BvBC,IAAD,IAAU;AAClB,WAAKC,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAEE;AADD,OAAd,EAEG,MAAM;AACPE,QAAAA,YAAY,CAACC,OAAb,GAAuBH,IAAI,CAACI,EAA5B;AACA,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OALD;AAMD,KAlCiC;;AAAA,SAoClCC,MApCkC,GAoCzB,MAAM;AACb,WAAKP,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAE;AADD,OAAd,EAEG,MAAM;AACPI,QAAAA,YAAY,CAACO,UAAb,CAAwB,SAAxB;AACA,aAAKJ,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,OALD;AAOD,KA5CiC;AAAA;;AAMhCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,KAAL,CAAWM,eAAX;AACA,SAAKN,KAAL,CAAWO,eAAX,GAFkB,CAGlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAsBHC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKd,OAAtB;AAA+B,MAAA,MAAM,EAAE,KAAKS,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEd,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAE,mBAAI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKK,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAET,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAvDiC;;AA2DlC,MAAMwB,GAAG,GAAGC,QAAQ,IAAI;AACtB,SAAO;AAELJ,IAAAA,eAAe,EAAE,MAAMI,QAAQ,CAAC9B,sBAAsB,EAAvB,CAF1B;AAGL2B,IAAAA,eAAe,EAAE,MAAMG,QAAQ,CAAC7B,sBAAsB,EAAvB,CAH1B;AAILC,IAAAA,iBAAiB,EAAE,MAAM4B,QAAQ,CAAC5B,iBAAiB,EAAlB;AAJ5B,GAAP;AAMD,CAPD;;AASA,eAAeH,OAAO,CAAC,IAAD,EAAO8B,GAAP,CAAP,CAAmBnB,GAAnB,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { fetchCateogriesCreator, fetchActivitiesCreator, assignCurrentUser } from './actionCreators/actionCreater'\n// import { Redirect, useHistory } from \"react-router-dom\"\nimport Navbar from '../src/containers/Navbar'\n// import AddActivity from './forms/addActivity'\nimport Login from './forms/login';\nimport Signup from './forms/signup';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from './containers/home'\n\n\nclass App extends React.Component {\n\n  state = {\n    currentUser: null \n  }\n\n  componentDidMount() {\n    this.props.fetchCategories()\n    this.props.fetchActivities()\n    // const user_id = localStorage.user_id\n\n    // if (user_id) {\n    //   fetch('http://localhost:3000/auto_login', {\n    //     headers: {\n    //       'Authorization': user_id\n    //     }\n    //   }).then(resp => resp.json()).then(response => {\n    //     if (response.errors) {\n    //       alert(response.errors)\n    //     } else {\n    //       this.setState({ currentUser: response })\n    //     }\n    //   })\n    // }\n  }\n\n\nsetUser = (user) => {\n  this.setState({\n    currentUser: user\n  }, () => {\n    localStorage.user_id = user.id\n    this.props.history.push('/')\n  })\n}\n\nlogout = () => {\n  this.setState({\n    currentUser: null\n  }, () => {\n    localStorage.removeItem('user_id')\n    this.props.history.push('/')\n  }\n  )\n}\n\nrender() {\n  return (\n    <Router>\n      <Navbar setUser={this.setUser} logout={this.logout} />\n      <Route path='/' component={Home} />\n      <Route path='/login' render={()=><Login setUser={this.setUser}/>} />\n      <Route path='/signup' component={Signup} />\n    </Router> \n  );\n}\n\n}\n\nconst mdp = dispatch => {\n  return {\n\n    fetchCategories: () => dispatch(fetchCateogriesCreator()),\n    fetchActivities: () => dispatch(fetchActivitiesCreator()),\n    assignCurrentUser: () => dispatch(assignCurrentUser())\n  }\n}\n\nexport default connect(null, mdp)(App)"]},"metadata":{},"sourceType":"module"}