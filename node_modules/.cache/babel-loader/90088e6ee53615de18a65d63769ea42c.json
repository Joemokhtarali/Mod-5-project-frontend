{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Flatiron Labs & projects/Mod 5 Project/Mod-5-project-frontend/src/containers/ActivitiesPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import Activity from '../components/activity'\n\nimport Search from '../components/search';\nimport AllActivities from './allActivities';\nimport Filter from '../components/filter';\nimport './ActivitiesPage.css';\n\nclass ActivitiesPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTerm: '',\n      searchButton: false,\n      SearchedActivities: [],\n      length: 0,\n      filteredCategory: 'All',\n      filteredDate: new Date()\n    };\n\n    this.changeButtonState = () => {\n      this.setState({\n        searchButton: !this.state.searchButton\n      });\n    };\n\n    this.changeSearchInput = event => {\n      this.setState({\n        searchTerm: event.target.value\n      });\n    };\n\n    this.SelectCategory = event => {\n      this.setState({\n        filteredCategory: event.target.value\n      });\n    };\n\n    this.parseDate = input => {\n      var parts = input.match(/(\\d+)/g); // new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])\n\n      return new Date(parts[0], parts[1] - 1, parts[2]); // months are 0-based\n    };\n\n    this.getActivtites = () => {\n      let activitiesCopy;\n\n      switch (this.state.filteredCategory) {\n        case 'All':\n          activitiesCopy = [...this.props.activities];\n          break;\n\n        case 'Theaters':\n          activitiesCopy = this.props.activities.filter(a => a.category_id === 1);\n          break;\n\n        case 'Sports':\n          activitiesCopy = this.props.activities.filter(a => a.category_id === 2);\n          break;\n\n        case 'Nature':\n          activitiesCopy = this.props.activities.filter(a => a.category_id === 3);\n          break;\n\n        case 'Art galleries and Museums':\n          activitiesCopy = this.props.activities.filter(a => a.category_id === 4);\n          break;\n\n        default:\n      }\n\n      if (this.state.searchButton) {\n        activitiesCopy = this.props.activities.filter(activity => activity.name && activity.name.toLowerCase().includes(this.state.searchTerm));\n      }\n\n      return activitiesCopy; // .filter((activity) =>\n      //     this.parseDate(activity.date).getTime() >= new Date()\n      // );\n    };\n\n    this.handleDateChange = date => {\n      this.setState({\n        filteredDate: date\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      changeSearchInput: this.changeSearchInput,\n      changeButtonState: this.changeButtonState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Filter, {\n      SelectCategory: this.SelectCategory,\n      handleDateChange: this.handleDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      \"activities-container\": true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AllActivities, {\n      activities: this.getActivtites(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst msp = state => {\n  return {\n    activities: state.activities,\n    categories: state.categories,\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(msp)(ActivitiesPage);","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Flatiron Labs & projects/Mod 5 Project/Mod-5-project-frontend/src/containers/ActivitiesPage.js"],"names":["React","connect","Search","AllActivities","Filter","ActivitiesPage","Component","state","searchTerm","searchButton","SearchedActivities","length","filteredCategory","filteredDate","Date","changeButtonState","setState","changeSearchInput","event","target","value","SelectCategory","parseDate","input","parts","match","getActivtites","activitiesCopy","props","activities","filter","a","category_id","activity","name","toLowerCase","includes","handleDateChange","date","render","msp","categories","currentUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,sBAAP;;AAKA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCC,KAFyC,GAEjC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,YAAY,EAAE,KAFV;AAGJC,MAAAA,kBAAkB,EAAE,EAHhB;AAIJC,MAAAA,MAAM,EAAE,CAJJ;AAKJC,MAAAA,gBAAgB,EAAE,KALd;AAMJC,MAAAA,YAAY,EAAE,IAAIC,IAAJ;AANV,KAFiC;;AAAA,SAYzCC,iBAZyC,GAYrB,MAAM;AACtB,WAAKC,QAAL,CAAc;AACVP,QAAAA,YAAY,EAAE,CAAC,KAAKF,KAAL,CAAWE;AADhB,OAAd;AAGH,KAhBwC;;AAAA,SAkBzCQ,iBAlByC,GAkBrBC,KAAK,IAAI;AACzB,WAAKF,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAEU,KAAK,CAACC,MAAN,CAAaC;AADf,OAAd;AAGH,KAtBwC;;AAAA,SAwBzCC,cAxByC,GAwBxBH,KAAK,IAAI;AACtB,WAAKF,QAAL,CAAc;AACVJ,QAAAA,gBAAgB,EAAEM,KAAK,CAACC,MAAN,CAAaC;AADrB,OAAd;AAKH,KA9BwC;;AAAA,SAgCzCE,SAhCyC,GAgC5BC,KAAD,IAAW;AACnB,UAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAY,QAAZ,CAAZ,CADmB,CAEnB;;AACA,aAAO,IAAIX,IAAJ,CAASU,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAL,GAAW,CAA9B,EAAiCA,KAAK,CAAC,CAAD,CAAtC,CAAP,CAHmB,CAGgC;AACtD,KApCwC;;AAAA,SAsCzCE,aAtCyC,GAsCzB,MAAM;AAClB,UAAIC,cAAJ;;AAEA,cAAQ,KAAKpB,KAAL,CAAWK,gBAAnB;AACI,aAAK,KAAL;AAEIe,UAAAA,cAAc,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,UAAf,CAAjB;AACA;;AACJ,aAAK,UAAL;AAEIF,UAAAA,cAAc,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,WAAF,KAAkB,CAApD,CAAjB;AACA;;AACJ,aAAK,QAAL;AAEIL,UAAAA,cAAc,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,WAAF,KAAkB,CAApD,CAAjB;AACA;;AACJ,aAAK,QAAL;AAEIL,UAAAA,cAAc,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,WAAF,KAAkB,CAApD,CAAjB;AACA;;AACJ,aAAK,2BAAL;AAEIL,UAAAA,cAAc,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,CAA6BC,CAAC,IAAIA,CAAC,CAACC,WAAF,KAAkB,CAApD,CAAjB;AACA;;AACJ;AArBJ;;AAwBA,UAAI,KAAKzB,KAAL,CAAWE,YAAf,EAA6B;AACzBkB,QAAAA,cAAc,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,CAA6BG,QAAQ,IAClDA,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqC,KAAK7B,KAAL,CAAWC,UAAhD,CADJ,CAAjB;AAEH;;AACD,aAAOmB,cAAP,CA/BkB,CAgClB;AACA;AACA;AAEH,KA1EwC;;AAAA,SA4EzCU,gBA5EyC,GA4ErBC,IAAD,IAAU;AACzB,WAAKtB,QAAL,CAAc;AACVH,QAAAA,YAAY,EAAEyB;AADJ,OAAd;AAGH,KAhFwC;AAAA;;AAmFzCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,iBAAiB,EAAE,KAAKtB,iBAAhC;AAAmD,MAAA,iBAAiB,EAAE,KAAKF,iBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,KAAKM,cAA7B;AAA6C,MAAA,gBAAgB,EAAE,KAAKgB,gBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,kCAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,KAAKX,aAAL,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHJ,CADJ;AASH;;AA7FwC;;AAgG7C,MAAMc,GAAG,GAAGjC,KAAK,IAAI;AACjB,SAAO;AACHsB,IAAAA,UAAU,EAAEtB,KAAK,CAACsB,UADf;AAEHY,IAAAA,UAAU,EAAElC,KAAK,CAACkC,UAFf;AAGHC,IAAAA,WAAW,EAAEnC,KAAK,CAACmC;AAHhB,GAAP;AAKH,CAND;;AAQA,eAAezC,OAAO,CAACuC,GAAD,CAAP,CAAanC,cAAb,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n// import Activity from '../components/activity'\nimport Search from '../components/search'\nimport AllActivities from './allActivities'\nimport Filter from '../components/filter'\nimport './ActivitiesPage.css'\n\n\n\n\nclass ActivitiesPage extends React.Component {\n\n    state = {\n        searchTerm: '',\n        searchButton: false,\n        SearchedActivities: [],\n        length: 0,\n        filteredCategory: 'All',\n        filteredDate: new Date()\n    }\n\n\n    changeButtonState = () => {\n        this.setState({\n            searchButton: !this.state.searchButton,\n        })\n    }\n\n    changeSearchInput = event => {\n        this.setState({\n            searchTerm: event.target.value,\n        })\n    }\n\n    SelectCategory = event => {\n        this.setState({\n            filteredCategory: event.target.value\n        })\n\n\n    }\n\n    parseDate = (input) => {\n        var parts = input.match(/(\\d+)/g);\n        // new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])\n        return new Date(parts[0], parts[1] - 1, parts[2]); // months are 0-based\n    }\n\n    getActivtites = () => {\n        let activitiesCopy;\n\n        switch (this.state.filteredCategory) {\n            case 'All':\n\n                activitiesCopy = [...this.props.activities]\n                break;\n            case 'Theaters':\n\n                activitiesCopy = this.props.activities.filter(a => a.category_id === 1)\n                break;\n            case 'Sports':\n\n                activitiesCopy = this.props.activities.filter(a => a.category_id === 2)\n                break;\n            case 'Nature':\n\n                activitiesCopy = this.props.activities.filter(a => a.category_id === 3)\n                break;\n            case 'Art galleries and Museums':\n\n                activitiesCopy = this.props.activities.filter(a => a.category_id === 4)\n                break;\n            default:\n\n        }\n        if (this.state.searchButton) {\n            activitiesCopy = this.props.activities.filter(activity =>\n                activity.name && activity.name.toLowerCase().includes(this.state.searchTerm))\n        }\n        return activitiesCopy\n        // .filter((activity) =>\n        //     this.parseDate(activity.date).getTime() >= new Date()\n        // );\n\n    }\n\n    handleDateChange = (date) => {\n        this.setState({\n            filteredDate: date\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Search changeSearchInput={this.changeSearchInput} changeButtonState={this.changeButtonState} />\n                <Filter SelectCategory={this.SelectCategory} handleDateChange={this.handleDateChange} />\n                <div activities-container>\n                    <AllActivities activities={this.getActivtites()} />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst msp = state => {\n    return {\n        activities: state.activities,\n        categories: state.categories,\n        currentUser: state.currentUser\n    }\n}\n\nexport default connect(msp)(ActivitiesPage)\n"]},"metadata":{},"sourceType":"module"}